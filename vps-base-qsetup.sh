#!/bin/bash

# ==========================================================================
#  vps-base-qsetup - –ë–∞–∑–æ–≤–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ VPS —Å—ä—Ä–≤—ä—Ä (–ª–æ–∫–∞–ª–Ω–æ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ)
# --------------------------------------------------------------------------
#  –í–µ—Ä—Å–∏—è: 1.0
#  –î–∞—Ç–∞: 2025-06-19
#  –ê–≤—Ç–æ—Ä: Ilko Yordanov / NetGalaxy
# ==========================================================================
#
#  –¢–æ–∑–∏ —Å–∫—Ä–∏–ø—Ç –∏–∑–≤—ä—Ä—à–≤–∞ –Ω–∞—á–∞–ª–Ω–∞, –±–µ–∑–æ–ø–∞—Å–Ω–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–∞–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞
#  VPS —Å—ä—Ä–≤—ä—Ä. –ò–∑–ø—ä–ª–Ω—è–≤–∞ —Å–µ –¥–∏—Ä–µ–∫—Ç–Ω–æ –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞, –Ω–µ –∏–∑–∏—Å–∫–≤–∞ SSH –∫—ä–º –¥—Ä—É–≥–∏ –º–∞—à–∏–Ω–∏.
#
#  –ï—Ç–∞–ø–∏:
#    1. –í—ä–≤–µ–∂–¥–∞–Ω–µ –Ω–∞ –Ω—É–∂–Ω–∞—Ç–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
#    2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç
#    3. –ü–æ—Ç–≤—ä—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
#    4. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞
# ==========================================================================

# === –ü–û–ú–û–©–ù–ê –ò–ù–§–û–†–ú–ê–¶–ò–Ø ===================================================
show_help() {
  echo "–ò–∑–ø–æ–ª–∑–≤–∞–Ω–µ: vps-base-qsetup.sh [–æ–ø—Ü–∏—è]"
  echo ""
  echo "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–∞–Ω–∞ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–∞ –Ω–∞—á–∞–ª–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ –ª–æ–∫–∞–ª–µ–Ω VPS —Å—ä—Ä–≤—ä—Ä."
  echo ""
  echo "–û–ø—Ü–∏–∏:"
  echo "  --version       –ü–æ–∫–∞–∑–≤–∞ –≤–µ—Ä—Å–∏—è—Ç–∞ –Ω–∞ —Å–∫—Ä–∏–ø—Ç–∞"
  echo "  --help          –ü–æ–∫–∞–∑–≤–∞ —Ç–∞–∑–∏ –ø–æ–º–æ—â"
}

# === –û–ë–†–ê–ë–û–¢–ö–ê –ù–ê –û–ü–¶–ò–ò ====================================================
if [[ $# -gt 0 ]]; then
  case "$1" in
    --version)
      echo "vps-base-qsetup –≤–µ—Ä—Å–∏—è 1.0 (19 —é–Ω–∏ 2025 –≥.)"
      exit 0
      ;;
    --help)
      show_help
      exit 0
      ;;
    *)
      echo "‚ùå –ù–µ—Ä–∞–∑–ø–æ–∑–Ω–∞—Ç–∞ –æ–ø—Ü–∏—è: $1"
      show_help
      exit 1
      ;;
  esac
fi

# === –ü–û–ö–ê–ó–í–ê–ù–ï –ù–ê –ó–ê–ì–õ–ê–í–ò–ï–¢–û ===============================================
echo ""
echo ""
echo -e "\e[32m=========================================="
echo -e " –ù–ê–ß–ê–õ–ù–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ù–ê –û–¢–î–ê–õ–ï–ß–ï–ù –°–™–†–í–™–†"
echo -e "==========================================\e[0m"
echo ""

# === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ù–ê –°–ü–ò–°–™–ö –° –ú–û–î–£–õ–ò ======================================
MODULES_FILE="todo.modules"

# mod_01_ip_check             # –í—ä–≤–µ–∂–¥–∞–Ω–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ IP –∞–¥—Ä–µ—Å
# mod_02_fqdn_config          # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ FQDN (hostname)
# mod_03_system_update        # –û–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ —Å–∏—Å—Ç–µ–º–∞—Ç–∞
# mod_04_base_tools           # –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏
# mod_05_locales              # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
# mod_06_timezone_ntp         # –í—Ä–µ–º–µ–≤–∞ –∑–æ–Ω–∞ –∏ –≤—Ä–µ–º–µ–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
# mod_07_ssh_port             # –ü—Ä–æ–º—è–Ω–∞ –Ω–∞ SSH –ø–æ—Ä—Ç–∞
# mod_08_admin_user           # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª
# mod_09_firewall_setup       # –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ –∑–∞—â–∏—Ç–Ω–∞ —Å—Ç–µ–Ω–∞ (UFW)
# mod_10_firewall_trusted     # –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –¥–æ–≤–µ—Ä–µ–Ω–∏ –º—Ä–µ–∂–∏ (VPN/LAN)
# mod_11_summary_reboot       # –û–±–æ–±—â–µ–Ω–∏–µ, –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω–µ –Ω–∞ UFW –∏ —Ä–µ—Å—Ç–∞—Ä—Ç

if [[ ! -f "$MODULES_FILE" ]]; then
  echo "‚è≥ –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —Ñ–∞–π–ª —Å—ä—Å —Å–ø–∏—Å—ä–∫ –Ω–∞ –º–æ–¥—É–ª–∏—Ç–µ ($MODULES_FILE)..."

  cat > "$MODULES_FILE" <<EOF
mod_01_ip_check
mod_02_fqdn_config
mod_03_system_update
mod_04_base_tools
mod_05_locales
mod_06_timezone_ntp
mod_07_ssh_port
mod_08_admin_user
mod_09_firewall_setup
mod_10_firewall_trusted
mod_11_summary_reboot
EOF

  echo "‚úÖ –°–ø–∏—Å—ä–∫—ä—Ç —Å –º–æ–¥—É–ª–∏ –±–µ—à–µ —Å—ä–∑–¥–∞–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ."
else
  echo "‚ÑπÔ∏è –û—Ç–∫—Ä–∏—Ç —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â —Ñ–∞–π–ª —Å—ä—Å —Å–ø–∏—Å—ä–∫ –Ω–∞ –º–æ–¥—É–ª–∏—Ç–µ: $MODULES_FILE"
  echo "   –°–∫—Ä–∏–ø—Ç—ä—Ç —â–µ –∏–∑–ø–æ–ª–∑–≤–∞ —Ç–µ–∫—É—â–æ—Ç–æ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ –∏ —â–µ –∏–∑–ø—ä–ª–Ω—è–≤–∞ —Å–∞–º–æ –Ω–∞–ª–∏—á–Ω–∏—Ç–µ –º–æ–¥—É–ª–∏."
fi
echo ""
echo ""


# === [–ú–û–î–£–õ 1] –í–™–í–ï–ñ–î–ê–ù–ï –ò –ü–†–û–í–ï–†–ö–ê –ù–ê IP –ê–î–†–ï–° –ù–ê –°–™–†–í–™–†–ê ====================
MODULE_NAME="mod_01_ip_check"
if ! grep -q "^$MODULE_NAME\b" todo.modules; then
  echo "üîÅ –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ –Ω–∞ $MODULE_NAME (–≤–µ—á–µ –∏–∑–ø—ä–ª–Ω–µ–Ω –∏–ª–∏ –Ω–µ –µ –≤ —Å–ø–∏—Å—ä–∫–∞)..."
  echo ""
  read -p "‚û°Ô∏è –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–Ω–µ –∫—ä–º —Å–ª–µ–¥–≤–∞—â–∏—è –º–æ–¥—É–ª? [Enter –∑–∞ –î–ê, 'q' –∑–∞ –∏–∑—Ö–æ–¥]: " next
  if [[ "$next" == "q" || "$next" == "Q" ]]; then
    echo "‚õî –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è —Å–ª–µ–¥ $MODULE_NAME."
    exit 0
  fi
  echo ""; echo ""
  return 0 2>/dev/null || exit 0
fi

echo "[1] –í–™–í–ï–ñ–î–ê–ù–ï –ò –ü–†–û–í–ï–†–ö–ê –ù–ê IP –ê–î–†–ï–° –ù–ê –°–™–†–í–™–†–ê..."
echo "-------------------------------------------------------------------------"
echo ""

while true; do
  printf "üåê –í—ä–≤–µ–¥–µ—Ç–µ –ø—É–±–ª–∏—á–Ω–∏—è IP –∞–¥—Ä–µ—Å –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞ (–∏–ª–∏ 'q' –∑–∞ –∏–∑—Ö–æ–¥): "
  read SERVER_IP

  if [[ "$SERVER_IP" == "q" || "$SERVER_IP" == "Q" ]]; then
    echo "‚ùé –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è."
    exit 0
  fi

  if ! [[ "$SERVER_IP" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    echo "‚ùå –ù–µ–≤–∞–ª–∏–¥–µ–Ω IP –∞–¥—Ä–µ—Å. –ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ –≤–∞–ª–∏–¥–µ–Ω IPv4 –∞–¥—Ä–µ—Å (–Ω–∞–ø—Ä. 192.168.1.100)."
    continue
  fi

  ACTUAL_IP=$(curl -s ifconfig.me)

  if [[ "$ACTUAL_IP" != "$SERVER_IP" ]]; then
    echo ""
    echo "üö´ –°–∫—Ä–∏–ø—Ç—ä—Ç –Ω–µ –µ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞ —Å –≤—ä–≤–µ–¥–µ–Ω–∏—è IP –∞–¥—Ä–µ—Å."
    echo "‚ö†Ô∏è –ù–µ—Å—ä–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ! –í—ä–≤–µ–¥–µ–Ω–∏—è—Ç IP –Ω–µ –æ—Ç–≥–æ–≤–∞—Ä—è –Ω–∞ —Ä–µ–∞–ª–Ω–∏—è IP –∞–¥—Ä–µ—Å –Ω–∞ –º–∞—à–∏–Ω–∞—Ç–∞."
    echo ""
    read -p "üîÅ –ò—Å–∫–∞—Ç–µ –ª–∏ –¥–∞ –æ–ø–∏—Ç–∞—Ç–µ –æ—Ç–Ω–æ–≤–æ? [Enter –∑–∞ –î–ê, 'q' –∑–∞ –∏–∑—Ö–æ–¥]: " retry
    if [[ "$retry" == "q" || "$retry" == "Q" ]]; then
      echo "‚õî –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è —Å–ª–µ–¥ $MODULE_NAME."
      exit 0
    fi
    echo ""
  else
    echo "‚úÖ –ü–æ—Ç–≤—ä—Ä–¥–µ–Ω–æ: —Å–∫—Ä–∏–ø—Ç—ä—Ç –µ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞ —Å IP $SERVER_IP."
    break
  fi
done

# –ó–∞–ø–∏—Å –≤ .setup.env
echo "SERVER_IP=\"$SERVER_IP\"" >> .setup.env

# üîö –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –æ—Ç —Å–ø–∏—Å—ä–∫–∞:
sed -i "/^$MODULE_NAME$/d" todo.modules
echo ""
echo ""

# === [–ú–û–î–£–õ 2] –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ù–ê –°–™–†–í–™–†–ù–ò–Ø –î–û–ú–ï–ô–ù (FQDN) ========================
MODULE_NAME="mod_02_fqdn_config"
if ! grep -q "^$MODULE_NAME\b" todo.modules; then
  echo "üîÅ –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ –Ω–∞ $MODULE_NAME (–≤–µ—á–µ –∏–∑–ø—ä–ª–Ω–µ–Ω –∏–ª–∏ –Ω–µ –µ –≤ —Å–ø–∏—Å—ä–∫–∞)..."
  return 0 2>/dev/null || exit 0
fi

echo "[2] –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ù–ê –°–™–†–í–™–†–ù–ò–Ø –î–û–ú–ï–ô–ù (FQDN)..."
echo "-------------------------------------------------------------------------"
echo ""

while true; do
  printf "üëâ –í—ä–≤–µ–¥–µ—Ç–µ –¥–æ–º–µ–π–Ω–∞ –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞ (FQDN) –∏–ª–∏ 'q' –∑–∞ –∏–∑—Ö–æ–¥: "
  read FQDN

  if [[ "$FQDN" == "q" || "$FQDN" == "Q" ]]; then
    echo "‚ùé –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è."
    exit 0
  fi

  if [[ -z "$FQDN" ]]; then
    echo "‚ùå –î–æ–º–µ–π–Ω—ä—Ç –Ω–µ –º–æ–∂–µ –¥–∞ –±—ä–¥–µ –ø—Ä–∞–∑–µ–Ω. –û–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ."
    continue
  fi

  if [[ ! "$FQDN" =~ ^([a-zA-Z0-9][-a-zA-Z0-9]*\.)+[a-zA-Z]{2,}$ ]]; then
    echo "‚ùå –ù–µ–≤–∞–ª–∏–¥–µ–Ω —Ñ–æ—Ä–º–∞—Ç –Ω–∞ –¥–æ–º–µ–π–Ω. –ü—Ä–∏–º–µ—Ä –∑–∞ –≤–∞–ª–∏–¥–µ–Ω: example.com"
    continue
  fi

  if ! getent hosts "$FQDN" >/dev/null; then
    echo "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –î–æ–º–µ–π–Ω—ä—Ç '$FQDN' –Ω–µ —Ä–µ–∑–æ–ª–≤–∏—Ä–∞ –≤ –º–æ–º–µ–Ω—Ç–∞."
    while true; do
      printf "‚ùì –ò—Å–∫–∞—Ç–µ –ª–∏ –¥–∞ –ø—Ä–æ–¥—ä–ª–∂–∏—Ç–µ —Å —Ç–æ–∑–∏ –¥–æ–º–µ–π–Ω? (y / n): "
      read -r confirm
      if [[ "$confirm" =~ ^[Yy]$ ]]; then
        break
      elif [[ "$confirm" =~ ^[Nn]$ || -z "$confirm" ]]; then
        continue 2
      else
        echo "‚ùå –ú–æ–ª—è, –æ—Ç–≥–æ–≤–æ—Ä–µ—Ç–µ —Å 'y' –∑–∞ –¥–∞ –ø—Ä–æ–¥—ä–ª–∂–∏—Ç–µ –∏–ª–∏ 'n' –∑–∞ –Ω–æ–≤ –¥–æ–º–µ–π–Ω."
      fi
    done
  fi
  break
done

# –ó–∞–¥–∞–≤–∞–Ω–µ –Ω–∞ hostname
hostnamectl set-hostname "$FQDN"
echo "‚úÖ Hostname –µ –∑–∞–¥–∞–¥–µ–Ω: $FQDN"

# –î–æ–±–∞–≤—è–Ω–µ –≤—ä–≤ /etc/hosts, –∞–∫–æ –ª–∏–ø—Å–≤–∞
SERVER_IP=$(curl -s ifconfig.me)
if ! grep -q "$FQDN" /etc/hosts; then
  echo "$SERVER_IP    $FQDN" >> /etc/hosts
  echo "‚úÖ –î–æ–±–∞–≤–µ–Ω —Ä–µ–¥ –≤ /etc/hosts: $SERVER_IP $FQDN"
else
  echo "‚ÑπÔ∏è –î–æ–º–µ–π–Ω—ä—Ç –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ –≤—ä–≤ /etc/hosts"
fi

# –ü–æ—Ç–≤—ä—Ä–∂–¥–µ–Ω–∏–µ
CURRENT_HOSTNAME=$(hostname)
if [[ "$CURRENT_HOSTNAME" == "$FQDN" ]]; then
  echo "‚úÖ –ü–æ—Ç–≤—ä—Ä–¥–µ–Ω–æ: —Ç–µ–∫—É—â–∏—è—Ç hostname –µ $CURRENT_HOSTNAME"
else
  echo "‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: hostname –Ω–µ —Å—ä–≤–ø–∞–¥–∞ ($CURRENT_HOSTNAME)"
fi

# –ó–∞–ø–∏—Å –≤ .setup.env
echo "FQDN=\"$FQDN\"" >> .setup.env

# üîö –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –æ—Ç —Å–ø–∏—Å—ä–∫–∞:
sed -i "/^$MODULE_NAME$/d" todo.modules

# üîÑ –ó–∞–ø–∏—Ç–≤–∞–Ω–µ –¥–∞–ª–∏ –¥–∞ —Å–µ –ø—Ä–æ–¥—ä–ª–∂–∏:
echo ""
read -p "‚û°Ô∏è –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–Ω–µ –∫—ä–º —Å–ª–µ–¥–≤–∞—â–∏—è –º–æ–¥—É–ª? [Enter –∑–∞ –î–ê, 'q' –∑–∞ –ø—Ä–µ–∫—Ä–∞—Ç—è–≤–∞–Ω–µ]: " next
if [[ "$next" == "q" || "$next" == "Q" ]]; then
  echo "‚õî –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è —Å–ª–µ–¥ –º–æ–¥—É–ª 2."
  exit 0
fi
echo ""
echo ""

exit 0

# --- [3] –û–ë–ù–û–í–Ø–í–ê–ù–ï –ù–ê –°–ò–°–¢–ï–ú–ê–¢–ê ---------------------------------------------
MODULE_NAME="mod_03_system_update"
echo "[3] –û–ë–ù–û–í–Ø–í–ê–ù–ï –ù–ê –°–ò–°–¢–ï–ú–ê–¢–ê..."
echo "-------------------------------------------------------------------------"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –º–æ–¥—É–ª—ä—Ç –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω
if ! grep -q "^$MODULE_NAME\b" todo.modules; then
  echo "üîÅ –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ –Ω–∞ $MODULE_NAME (–≤–µ—á–µ –∏–∑–ø—ä–ª–Ω–µ–Ω –∏–ª–∏ –Ω–µ –µ –≤ —Å–ø–∏—Å—ä–∫–∞)..."
  return 0 2>/dev/null || exit 0
fi

# –ò–∑—á–∞–∫–≤–∞–Ω–µ, –∞–∫–æ —Å–∏—Å—Ç–µ–º–∞—Ç–∞ –µ –∑–∞–∫–ª—é—á–µ–Ω–∞ –æ—Ç –¥—Ä—É–≥ apt –ø—Ä–æ—Ü–µ—Å
MAX_WAIT=60
COUNTER=0
echo "‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –∑–∞–µ—Ç–æ—Å—Ç –Ω–∞ –ø–∞–∫–µ—Ç–Ω–∞—Ç–∞ —Å–∏—Å—Ç–µ–º–∞..."
while fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do
  sleep 1
  ((COUNTER++))
  if ((COUNTER >= MAX_WAIT)); then
    echo "‚ùå –ü–∞–∫–µ—Ç–Ω–∞—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ –µ –∑–∞–∫–ª—é—á–µ–Ω–∞ –æ—Ç –¥—Ä—É–≥ –ø—Ä–æ—Ü–µ—Å –ø–æ–≤–µ—á–µ –æ—Ç ${MAX_WAIT} —Å–µ–∫—É–Ω–¥–∏."
    echo "   –ú–æ–ª—è, –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ –ø–æ-–∫—ä—Å–Ω–æ."
    RESULT_SYSTEM_UPDATE="‚ùå"
    echo "RESULT_SYSTEM_UPDATE=‚ùå" >> .setup.env
    exit 1
  fi
done

# –ò–∑–ø—ä–ª–Ω–µ–Ω–∏–µ –Ω–∞ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ—Ç–æ
if sudo apt-get update && sudo apt-get upgrade -y && sudo apt-get autoremove -y; then
  echo "‚úÖ –°–∏—Å—Ç–µ–º–∞—Ç–∞ –µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–µ–Ω–∞."
  RESULT_SYSTEM_UPDATE="‚úÖ"
  echo "RESULT_SYSTEM_UPDATE=‚úÖ" >> .setup.env
else
  echo "‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ —Å–∏—Å—Ç–µ–º–∞—Ç–∞. –ü—Ä–æ–≤–µ—Ä–µ—Ç–µ –≥–æ—Ä–Ω–∏—Ç–µ —Å—ä–æ–±—â–µ–Ω–∏—è."
  RESULT_SYSTEM_UPDATE="‚ùå"
  echo "RESULT_SYSTEM_UPDATE=‚ùå" >> .setup.env
  exit 1
fi

# –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –æ—Ç —Å–ø–∏—Å—ä–∫–∞
sed -i "/^$MODULE_NAME$/d" todo.modules

# –ó–∞–ø–∏—Ç–≤–∞–Ω–µ –¥–∞–ª–∏ –¥–∞ —Å–µ –ø—Ä–æ–¥—ä–ª–∂–∏
echo ""
read -p "‚û°Ô∏è –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–Ω–µ –∫—ä–º —Å–ª–µ–¥–≤–∞—â–∏—è –º–æ–¥—É–ª? [Enter –∑–∞ –î–ê, 'q' –∑–∞ –ø—Ä–µ–∫—Ä–∞—Ç—è–≤–∞–Ω–µ]: " next
if [[ "$next" == "q" || "$next" == "Q" ]]; then
  echo "‚õî –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è —Å–ª–µ–¥ –º–æ–¥—É–ª 3."
  exit 0
fi
echo ""
echo ""


# --- [4] –ò–ù–°–¢–ê–õ–ò–†–ê–ù–ï –ù–ê –û–°–ù–û–í–ù–ò –ò–ù–°–¢–†–£–ú–ï–ù–¢–ò -----------------------------------
MODULE_NAME="mod_04_base_tools"
echo "[4] –ò–ù–°–¢–ê–õ–ò–†–ê–ù–ï –ù–ê –û–°–ù–û–í–ù–ò –ò–ù–°–¢–†–£–ú–ï–ù–¢–ò..."
echo "-------------------------------------------------------------------------"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –º–æ–¥—É–ª—ä—Ç –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω
if ! grep -q "^$MODULE_NAME\b" todo.modules; then
  echo "üîÅ –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ –Ω–∞ $MODULE_NAME (–≤–µ—á–µ –∏–∑–ø—ä–ª–Ω–µ–Ω –∏–ª–∏ –Ω–µ –µ –≤ —Å–ø–∏—Å—ä–∫–∞)..."
  return 0 2>/dev/null || exit 0
fi

# –û–ø–∏—Ç –∑–∞ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ
if sudo apt-get install -y \
    nano unzip git curl wget net-tools htop \
    python3 python3-pip python3-venv build-essential; then
  echo "‚úÖ –í—Å–∏—á–∫–∏ –æ—Å–Ω–æ–≤–Ω–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–∞ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–∏."
  RESULT_BASE_TOOLS="‚úÖ"
  echo "RESULT_BASE_TOOLS=‚úÖ" >> .setup.env
else
  echo "‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è—Ç–∞. –ü—Ä–æ–≤–µ—Ä–µ—Ç–µ:"
  echo "1. –î–∞–ª–∏ apt-get cache –µ –æ–±–Ω–æ–≤–µ–Ω (–≤ –ø—Ä–µ–¥—Ö–æ–¥–Ω–∞—Ç–∞ —Å—Ç—ä–ø–∫–∞)"
  echo "2. –î–∞–ª–∏ –∏–º–∞ –¥–æ—Å—Ç–∞—Ç—ä—á–Ω–æ –¥–∏—Å–∫–æ–≤–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ"
  RESULT_BASE_TOOLS="‚ùå"
  echo "RESULT_BASE_TOOLS=‚ùå" >> .setup.env
  exit 1
fi

# –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –æ—Ç —Å–ø–∏—Å—ä–∫–∞
sed -i "/^$MODULE_NAME$/d" todo.modules

# –ó–∞–ø–∏—Ç–≤–∞–Ω–µ –¥–∞–ª–∏ –¥–∞ —Å–µ –ø—Ä–æ–¥—ä–ª–∂–∏
echo ""
read -p "‚û°Ô∏è –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–Ω–µ –∫—ä–º —Å–ª–µ–¥–≤–∞—â–∏—è –º–æ–¥—É–ª? [Enter –∑–∞ –î–ê, 'q' –∑–∞ –ø—Ä–µ–∫—Ä–∞—Ç—è–≤–∞–Ω–µ]: " next
if [[ "$next" == "q" || "$next" == "Q" ]]; then
  echo "‚õî –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è —Å–ª–µ–¥ –º–æ–¥—É–ª 4."
  exit 0
fi
echo ""
echo ""


# --- [5] –ù–ê–°–¢–†–û–ô–ö–ê –ù–ê –õ–û–ö–ê–õ–ò–ó–ê–¶–ò–ò -----------------------------------------------
MODULE_NAME="mod_05_locales"
echo "[5] –ù–ê–°–¢–†–û–ô–ö–ê –ù–ê –õ–û–ö–ê–õ–ò–ó–ê–¶–ò–ò..."
echo "-------------------------------------------------------------------------"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –º–æ–¥—É–ª—ä—Ç –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω
if ! grep -q "^$MODULE_NAME\b" todo.modules; then
  echo "üîÅ –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ –Ω–∞ $MODULE_NAME (–≤–µ—á–µ –∏–∑–ø—ä–ª–Ω–µ–Ω –∏–ª–∏ –Ω–µ –µ –≤ —Å–ø–∏—Å—ä–∫–∞)..."
  return 0 2>/dev/null || exit 0
fi

RESULT_LOCALES="‚ùî"

echo "üåê –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ –µ–∑–∏–∫–æ–≤–∏ –ø–∞–∫–µ—Ç–∏ (BG, RU)..."
if sudo apt-get install -y language-pack-bg language-pack-ru; then
  echo "‚úÖ –ï–∑–∏–∫–æ–≤–∏—Ç–µ –ø–∞–∫–µ—Ç–∏ —Å–∞ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–∏."
else
  echo "‚ö†Ô∏è –ù–µ—É—Å–ø–µ—à–Ω–∞ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è –Ω–∞ –µ–∑–∏–∫–æ–≤–∏ –ø–∞–∫–µ—Ç–∏. –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–º–µ."
  RESULT_LOCALES="‚ö†Ô∏è"
fi

echo "üîß –ê–∫—Ç–∏–≤–∏—Ä–∞–Ω–µ –Ω–∞ UTF-8 –ª–æ–∫–∞–ª–∏ –≤ /etc/locale.gen..."
sudo sed -i '/^# *bg_BG.UTF-8 UTF-8/s/^# *//g' /etc/locale.gen
sudo sed -i '/^# *ru_RU.UTF-8 UTF-8/s/^# *//g' /etc/locale.gen
sudo sed -i '/^# *en_US.UTF-8 UTF-8/s/^# *//g' /etc/locale.gen

grep -qxF 'bg_BG.UTF-8 UTF-8' /etc/locale.gen || echo 'bg_BG.UTF-8 UTF-8' | sudo tee -a /etc/locale.gen >/dev/null
grep -qxF 'ru_RU.UTF-8 UTF-8' /etc/locale.gen || echo 'ru_RU.UTF-8 UTF-8' | sudo tee -a /etc/locale.gen >/dev/null
grep -qxF 'en_US.UTF-8 UTF-8' /etc/locale.gen || echo 'en_US.UTF-8 UTF-8' | sudo tee -a /etc/locale.gen >/dev/null

echo "‚öôÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ UTF-8 –ª–æ–∫–∞–ª–∏ (–∑–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ –∑–∞ —Å—ä–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç —Å NetGalaxy)..."
if sudo locale-gen && sudo update-locale; then
  echo "‚úÖ –õ–æ–∫–∞–ª–∏—Ç–µ —Å–∞ —É—Å–ø–µ—à–Ω–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–∞–Ω–∏."
  [[ "$RESULT_LOCALES" == "‚ùî" ]] && RESULT_LOCALES="‚úÖ"
else
  echo "‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –ª–æ–∫–∞–ª–∏."
  RESULT_LOCALES="‚ùå"
fi

# –ó–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∞
echo "RESULT_LOCALES=\"$RESULT_LOCALES\"" >> .setup.env

# –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –æ—Ç —Å–ø–∏—Å—ä–∫–∞
sed -i "/^$MODULE_NAME$/d" todo.modules

# –ó–∞–ø–∏—Ç–≤–∞–Ω–µ –¥–∞–ª–∏ –¥–∞ —Å–µ –ø—Ä–æ–¥—ä–ª–∂–∏
echo ""
read -p "‚û°Ô∏è –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–Ω–µ –∫—ä–º —Å–ª–µ–¥–≤–∞—â–∏—è –º–æ–¥—É–ª? [Enter –∑–∞ –î–ê, 'q' –∑–∞ –ø—Ä–µ–∫—Ä–∞—Ç—è–≤–∞–Ω–µ]: " next
if [[ "$next" == "q" || "$next" == "Q" ]]; then
  echo "‚õî –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è —Å–ª–µ–¥ –º–æ–¥—É–ª 5."
  exit 0
fi
echo ""
echo ""


# --- [6] –ù–ê–°–¢–†–û–ô–ö–ê –ù–ê –í–†–ï–ú–ï–í–ê –ó–û–ù–ê –ò NTP –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø ------------------------
MODULE_NAME="mod_06_timezone_ntp"
echo "[6] –ù–ê–°–¢–†–û–ô–ö–ê –ù–ê –í–†–ï–ú–ï–í–ê –ó–û–ù–ê –ò NTP –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø..."
echo "-------------------------------------------------------------------------"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –º–æ–¥—É–ª—ä—Ç –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω
if ! grep -q "^$MODULE_NAME\b" todo.modules; then
  echo "üîÅ –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ –Ω–∞ $MODULE_NAME (–≤–µ—á–µ –∏–∑–ø—ä–ª–Ω–µ–Ω –∏–ª–∏ –Ω–µ –µ –≤ —Å–ø–∏—Å—ä–∫–∞)..."
  return 0 2>/dev/null || exit 0
fi

RESULT_TIMEZONE_NTP="‚ùî"

echo "üåç –ó–∞–¥–∞–≤–∞–Ω–µ –Ω–∞ –≤—Ä–µ–º–µ–≤–∞ –∑–æ–Ω–∞ –Ω–∞ UTC (—É–Ω–∏—Ñ–∏—Ü–∏—Ä–∞–Ω —Å—Ç–∞–Ω–¥–∞—Ä—Ç –≤ –º—Ä–µ–∂–∞—Ç–∞ NetGalaxy)..."
if sudo timedatectl set-timezone UTC; then
  echo "‚úÖ –í—Ä–µ–º–µ–≤–∞—Ç–∞ –∑–æ–Ω–∞ –µ –∑–∞–¥–∞–¥–µ–Ω–∞ –Ω–∞ UTC."
else
  echo "‚ùå –ù–µ—É—Å–ø–µ—à–Ω–∞ —Å–º—è–Ω–∞ –Ω–∞ –≤—Ä–µ–º–µ–≤–∞—Ç–∞ –∑–æ–Ω–∞."
  RESULT_TIMEZONE_NTP="‚ùå"
  echo "RESULT_TIMEZONE_NTP=\"$RESULT_TIMEZONE_NTP\"" >> .setup.env
  exit 1
fi

echo "üîß –ò–∑–∫–ª—é—á–≤–∞–Ω–µ –Ω–∞ –¥—Ä—É–≥–∏ NTP —É—Å–ª—É–≥–∏..."
sudo systemctl stop ntpd 2>/dev/null && sudo systemctl disable ntpd 2>/dev/null
sudo systemctl stop systemd-timesyncd 2>/dev/null && sudo systemctl disable systemd-timesyncd 2>/dev/null

echo "üì¶ –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–∞–Ω–µ –Ω–∞ chrony..."
if ! sudo apt-get install -y chrony; then
  echo "‚ùå –ù–µ—É—Å–ø–µ—à–Ω–∞ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è –Ω–∞ chrony."
  RESULT_TIMEZONE_NTP="‚ùå"
  echo "RESULT_TIMEZONE_NTP=\"$RESULT_TIMEZONE_NTP\"" >> .setup.env
  exit 1
fi

NTP_SERVERS=(0.pool.ntp.org 1.pool.ntp.org 2.pool.ntp.org 3.pool.ntp.org)
echo "‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–∞–Ω–µ –Ω–∞ /etc/chrony/chrony.conf..."
echo -e "server ${NTP_SERVERS[0]} iburst
server ${NTP_SERVERS[1]} iburst
server ${NTP_SERVERS[2]} iburst
server ${NTP_SERVERS[3]} iburst

rtcsync
makestep 1.0 3
driftfile /var/lib/chrony/drift
logdir /var/log/chrony" | sudo tee /etc/chrony/chrony.conf > /dev/null

echo "üîÑ –†–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —É—Å–ª—É–≥–∞—Ç–∞..."
sudo systemctl restart chrony
sudo systemctl enable chrony

echo "üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è—Ç–∞..."
timedatectl | grep 'Time zone'
echo "NTP —Å—Ç–∞—Ç—É—Å:"
chronyc tracking | grep -E 'Stratum|System time'
chronyc sources | grep '^\^\*'

echo "‚úÖ –í—Ä–µ–º–µ–≤–∞—Ç–∞ –∑–æ–Ω–∞ –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏."
RESULT_TIMEZONE_NTP="‚úÖ"

# –ó–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∞
echo "RESULT_TIMEZONE_NTP=\"$RESULT_TIMEZONE_NTP\"" >> .setup.env

# –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –æ—Ç —Å–ø–∏—Å—ä–∫–∞
sed -i "/^$MODULE_NAME$/d" todo.modules

# –ó–∞–ø–∏—Ç–≤–∞–Ω–µ –¥–∞–ª–∏ –¥–∞ —Å–µ –ø—Ä–æ–¥—ä–ª–∂–∏
echo ""
read -p "‚û°Ô∏è –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–Ω–µ –∫—ä–º —Å–ª–µ–¥–≤–∞—â–∏—è –º–æ–¥—É–ª? [Enter –∑–∞ –î–ê, 'q' –∑–∞ –ø—Ä–µ–∫—Ä–∞—Ç—è–≤–∞–Ω–µ]: " next
if [[ "$next" == "q" || "$next" == "Q" ]]; then
  echo "‚õî –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è —Å–ª–µ–¥ –º–æ–¥—É–ª 6."
  exit 0
fi
echo ""
echo ""


# === [7] –ü–†–û–ú–Ø–ù–ê –ù–ê SSH –ü–û–†–¢–ê ========================================
MODULE_NAME="mod_07_ssh_port"
echo "[7] –ü–†–û–ú–Ø–ù–ê –ù–ê SSH –ü–û–†–¢–ê..."
echo "-------------------------------------------------------------------------"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –º–æ–¥—É–ª—ä—Ç –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω
if ! grep -q "^$MODULE_NAME\b" todo.modules; then
  echo "üîÅ –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ –Ω–∞ $MODULE_NAME (–≤–µ—á–µ –∏–∑–ø—ä–ª–Ω–µ–Ω –∏–ª–∏ –Ω–µ –µ –≤ —Å–ø–∏—Å—ä–∫–∞)..."
  return 0 2>/dev/null || exit 0
fi

RESULT_SSH_PORT="‚ùî"

CURRENT_SSH_PORT=$(ss -tlpn 2>/dev/null | grep sshd | awk -F: '/LISTEN/ {print $2}' | awk '{print $1}' | head -n 1)
CURRENT_SSH_PORT="${CURRENT_SSH_PORT:-22}"

while true; do
  printf "üëâ –í –º–æ–º–µ–Ω—Ç–∞ –∏–∑–ø–æ–ª–∑–≤–∞—Ç–µ SSH –ø–æ—Ä—Ç %s.\n" "$CURRENT_SSH_PORT"
  echo "   –í—ä–≤–µ–¥–µ—Ç–µ –Ω–æ–≤ –ø–æ—Ä—Ç, –∞–∫–æ –∂–µ–ª–∞–µ—Ç–µ –¥–∞ –≥–æ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ,"
  echo "   –∏–ª–∏ –Ω–∞—Ç–∏—Å–Ω–µ—Ç–µ Enter –±–µ–∑ –≤—ä–≤–µ–∂–¥–∞–Ω–µ –∑–∞ –∑–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â–∏—è (–∏–ª–∏ 'q' –∑–∞ –ø—Ä–µ–∫—Ä–∞—Ç—è–≤–∞–Ω–µ):"
  printf "‚û§ SSH –ø–æ—Ä—Ç: "
  read -r SSH_PORT_INPUT

  if [[ "$SSH_PORT_INPUT" == "q" || "$SSH_PORT_INPUT" == "Q" ]]; then
    echo "‚ùé –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è."
    exit 0

  elif [[ -z "$SSH_PORT_INPUT" ]]; then
    SSH_PORT="$CURRENT_SSH_PORT"
    echo "‚úÖ SSH –ø–æ—Ä—Ç—ä—Ç —â–µ –æ—Å—Ç–∞–Ω–µ: $SSH_PORT"
    break

  elif [[ "$SSH_PORT_INPUT" =~ ^[0-9]+$ ]] && (( SSH_PORT_INPUT >= 1024 && SSH_PORT_INPUT <= 65535 )); then
    SSH_PORT="$SSH_PORT_INPUT"
    echo "‚úÖ –ù–æ–≤ SSH –ø–æ—Ä—Ç —â–µ –±—ä–¥–µ: $SSH_PORT"
    break

  else
    echo "‚ùå –ù–µ–≤–∞–ª–∏–¥–µ–Ω –Ω–æ–º–µ—Ä –Ω–∞ –ø–æ—Ä—Ç. –î–æ–ø—É—Å—Ç–∏–º–∏ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏: 1024‚Äì65535. –û–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ."
  fi
done

# –ü—Ä–æ–º—è–Ω–∞ –≤ sshd_config, –∞–∫–æ –ø–æ—Ä—Ç—ä—Ç –µ —Ä–∞–∑–ª–∏—á–µ–Ω –æ—Ç —Ç–µ–∫—É—â–∏—è
if [[ "$SSH_PORT" != "$CURRENT_SSH_PORT" ]]; then
  echo "üîß –ê–∫—Ç—É–∞–ª–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ /etc/ssh/sshd_config..."

  if grep -q "^#*Port " /etc/ssh/sshd_config; then
    sudo sed -i "s/^#*Port .*/Port $SSH_PORT/" /etc/ssh/sshd_config
  else
    echo "Port $SSH_PORT" | sudo tee -a /etc/ssh/sshd_config > /dev/null
  fi

  echo "üîÑ –†–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ SSH —É—Å–ª—É–≥–∞—Ç–∞..."
  if sudo systemctl restart ssh; then
    echo "‚úÖ SSH –ø–æ—Ä—Ç—ä—Ç –µ –ø—Ä–æ–º–µ–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ –Ω–∞ $SSH_PORT –∏ —É—Å–ª—É–≥–∞—Ç–∞ –µ —Ä–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–∞."
    RESULT_SSH_PORT="‚úÖ"
  else
    echo "‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ä–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ SSH! –ü—Ä–æ–≤–µ—Ä–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Ç–∞ —Ä—ä—á–Ω–æ!"
    RESULT_SSH_PORT="‚ùå"
    echo "RESULT_SSH_PORT=\"$RESULT_SSH_PORT\"" >> .setup.env
    exit 1
  fi
else
  echo "‚ÑπÔ∏è –ù—è–º–∞ –ø—Ä–æ–º—è–Ω–∞ ‚Äì SSH –ø–æ—Ä—Ç—ä—Ç –æ—Å—Ç–∞–≤–∞ $SSH_PORT."
  RESULT_SSH_PORT="‚úÖ"
fi

# –ó–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∞
echo "RESULT_SSH_PORT=\"$RESULT_SSH_PORT\"" >> .setup.env

# üîö –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –æ—Ç —Å–ø–∏—Å—ä–∫–∞:
sed -i "/^$MODULE_NAME$/d" todo.modules

# üîÑ –ó–∞–ø–∏—Ç–≤–∞–Ω–µ –¥–∞–ª–∏ –¥–∞ —Å–µ –ø—Ä–æ–¥—ä–ª–∂–∏:
echo ""
read -p "‚û°Ô∏è –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–Ω–µ –∫—ä–º —Å–ª–µ–¥–≤–∞—â–∏—è –º–æ–¥—É–ª? [Enter –∑–∞ –î–ê, 'q' –∑–∞ –ø—Ä–µ–∫—Ä–∞—Ç—è–≤–∞–Ω–µ]: " next
if [[ "$next" == "q" || "$next" == "Q" ]]; then
  echo "‚õî –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è —Å–ª–µ–¥ –º–æ–¥—É–ª 7."
  exit 0
fi
echo ""
echo ""


# === [–ú–û–î–£–õ 8] –°–™–ó–î–ê–í–ê–ù–ï –ù–ê –ù–û–í –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–°–ö–ò –ü–†–û–§–ò–õ ====================
MODULE_NAME="mod_08_admin_user"
echo "[8] –°–™–ó–î–ê–í–ê–ù–ï –ù–ê –ù–û–í –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–°–ö–ò –ü–†–û–§–ò–õ"
echo "-------------------------------------------------------------------------"
echo "üîê –ü–æ —Å—ä–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞ —Å–∏–≥—É—Ä–Ω–æ—Å—Ç, root –¥–æ—Å—Ç—ä–ø—ä—Ç —á—Ä–µ–∑ SSH —â–µ –±—ä–¥–µ –∑–∞–±—Ä–∞–Ω–µ–Ω."
echo "‚úÖ –©–µ —Å—ä–∑–¥–∞–¥–µ–º –Ω–æ–≤ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª —Å root –ø—Ä–∞–≤–∞ –∑–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–∞ —Ä–∞–±–æ—Ç–∞."
echo ""

RESULT_ADMIN_USER="‚ùî"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –º–æ–¥—É–ª—ä—Ç –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω
if ! grep -q "^$MODULE_NAME\b" todo.modules; then
  echo "üîÅ –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ –Ω–∞ $MODULE_NAME (–≤–µ—á–µ –∏–∑–ø—ä–ª–Ω–µ–Ω –∏–ª–∏ –Ω–µ –µ –≤ —Å–ø–∏—Å—ä–∫–∞)..."
  return 0 2>/dev/null || exit 0
fi

# –í—ä–≤–µ–∂–¥–∞–Ω–µ –Ω–∞ –∏–º–µ
while true; do
  printf "üëâ –í—ä–≤–µ–¥–µ—Ç–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ –∑–∞ –Ω–æ–≤–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä (–º–∏–Ω. 3 —Å–∏–º–≤–æ–ª–∞ –∏–ª–∏ q –∑–∞ –∏–∑—Ö–æ–¥): "
  read ADMIN_USER

  if [[ "$ADMIN_USER" == "q" || "$ADMIN_USER" == "Q" ]]; then
    echo "‚ùé –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è."
    exit 0
  fi

  if [[ -z "$ADMIN_USER" ]]; then
    echo "‚ùå –ü–æ–ª–µ—Ç–æ –∑–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ—Ç–æ –∏–º–µ –Ω–µ –º–æ–∂–µ –¥–∞ –±—ä–¥–µ –ø—Ä–∞–∑–Ω–æ."
    continue
  fi

  if [[ ${#ADMIN_USER} -lt 3 ]]; then
    echo "‚ùå –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ—Ç–æ –∏–º–µ —Ç—Ä—è–±–≤–∞ –¥–∞ –±—ä–¥–µ –ø–æ–Ω–µ 3 —Å–∏–º–≤–æ–ª–∞."
    continue
  fi

  if [[ ! "$ADMIN_USER" =~ ^[a-z_][a-z0-9_-]*$ ]]; then
    echo "‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω–æ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—Å–∫–æ –∏–º–µ. –†–∞–∑—Ä–µ—à–µ–Ω–∏ —Å–∞ —Å–∞–º–æ –º–∞–ª–∫–∏ –±—É–∫–≤–∏, —Ü–∏—Ñ—Ä–∏, '-', '_' –∏ –¥–∞ –Ω–µ –∑–∞–ø–æ—á–≤–∞ —Å —Ü–∏—Ñ—Ä–∞."
    continue
  fi

  if id "$ADMIN_USER" &>/dev/null; then
    echo "‚ö†Ô∏è –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç '$ADMIN_USER' –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞. –ò–∑–±–µ—Ä–µ—Ç–µ –¥—Ä—É–≥–æ –∏–º–µ."
    continue
  fi

  break
done

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∑–∞ –ø–∞—Ä–æ–ª–∞
echo "üõ°Ô∏è –ü–∞—Ä–æ–ª–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ –æ—Ç–≥–æ–≤–∞—Ä—è –Ω–∞ —Å–ª–µ–¥–Ω–∏—Ç–µ —É—Å–ª–æ–≤–∏—è:"
echo "   - –ú–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–∞"
echo "   - –ü–æ–Ω–µ –µ–¥–Ω–∞ –ª–∞—Ç–∏–Ω—Å–∫–∞ –º–∞–ª–∫–∞ –±—É–∫–≤–∞ (a-z)"
echo "   - –ü–æ–Ω–µ –µ–¥–Ω–∞ –ª–∞—Ç–∏–Ω—Å–∫–∞ –≥–ª–∞–≤–Ω–∞ –±—É–∫–≤–∞ (A-Z)"
echo "   - –ü–æ–Ω–µ –µ–¥–Ω–∞ —Ü–∏—Ñ—Ä–∞ (0-9)"
echo "‚ùó –í–Ω–∏–º–∞–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä–µ—Ç–µ –Ω–∞ –∫–∞–∫—ä–≤ –µ–∑–∏–∫ –≤—ä–≤–µ–∂–¥–∞—Ç–µ, –∞–∫–æ –∏–∑–ø–æ–ª–∑–≤–∞—Ç–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–∏ –±—É–∫–≤–∏ (–Ω–∞–ø—Ä. –∫–∏—Ä–∏–ª–∏—Ü–∞)"
echo ""

# –í—ä–≤–µ–∂–¥–∞–Ω–µ –∏ –ø–æ—Ç–≤—ä—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞ –ø–∞—Ä–æ–ª–∞
while true; do
  printf "üîë –í—ä–≤–µ–¥–µ—Ç–µ –ø–∞—Ä–æ–ª–∞ –∑–∞ %s: " "$ADMIN_USER"
  read -s PASSWORD_1
  echo

  if [[ -z "$PASSWORD_1" ]]; then
    echo "‚ùå –ü–∞—Ä–æ–ª–∞—Ç–∞ –Ω–µ –º–æ–∂–µ –¥–∞ –µ –ø—Ä–∞–∑–Ω–∞."
    continue
  fi

  if (( ${#PASSWORD_1} < 8 )) || \
     ! [[ "$PASSWORD_1" =~ [a-z] ]] || \
     ! [[ "$PASSWORD_1" =~ [A-Z] ]] || \
     ! [[ "$PASSWORD_1" =~ [0-9] ]]; then
    echo "‚ùå –ü–∞—Ä–æ–ª–∞—Ç–∞ —Ç—Ä—è–±–≤–∞ –¥–∞ —Å—ä–¥—ä—Ä–∂–∞ –ø–æ–Ω–µ 8 —Å–∏–º–≤–æ–ª–∞, –≤–∫–ª—é—á–∏—Ç–µ–ª–Ω–æ –º–∞–ª–∫–∞ –∏ –≥–ª–∞–≤–Ω–∞ –ª–∞—Ç–∏–Ω—Å–∫–∞ –±—É–∫–≤–∞, –∏ —Ü–∏—Ñ—Ä–∞."
    continue
  fi

  if LC_ALL=C grep -q '[^ -~]' <<< "$PASSWORD_1"; then
    echo "‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –í –ø–∞—Ä–æ–ª–∞—Ç–∞ —Å–∞ –æ—Ç–∫—Ä–∏—Ç–∏ —Å–∏–º–≤–æ–ª–∏ –∏–∑–≤—ä–Ω –ª–∞—Ç–∏–Ω–∏—Ü–∞—Ç–∞."
    while true; do
      printf "‚ùì –ò—Å–∫–∞—Ç–µ –ª–∏ –¥–∞ –ø—Ä–æ–¥—ä–ª–∂–∏—Ç–µ —Å —Ç–∞–∑–∏ –ø–∞—Ä–æ–ª–∞? (y / n): "
      read -r confirm_charset
      if [[ "$confirm_charset" =~ ^[Yy]$ ]]; then
        break
      elif [[ "$confirm_charset" =~ ^[Nn]$ || -z "$confirm_charset" ]]; then
        continue 2
      else
        echo "‚ùå –ú–æ–ª—è, –æ—Ç–≥–æ–≤–æ—Ä–µ—Ç–µ —Å 'y' –∏–ª–∏ 'n'."
      fi
    done
  fi

  printf "üîë –ü–æ–≤—Ç–æ—Ä–µ—Ç–µ –ø–∞—Ä–æ–ª–∞—Ç–∞: "
  read -s PASSWORD_2
  echo

  if [[ "$PASSWORD_1" != "$PASSWORD_2" ]]; then
    echo "‚ùå –ü–∞—Ä–æ–ª–∏—Ç–µ –Ω–µ —Å—ä–≤–ø–∞–¥–∞—Ç. –û–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ."
  else
    break
  fi
done

# –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª
echo "üë§ –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª '$ADMIN_USER'..."
if sudo useradd -m -s /bin/bash "$ADMIN_USER" && \
   echo "$ADMIN_USER:$PASSWORD_1" | sudo chpasswd && \
   sudo usermod -aG sudo "$ADMIN_USER"; then
  echo "‚úÖ –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç '$ADMIN_USER' –±–µ—à–µ —Å—ä–∑–¥–∞–¥–µ–Ω —Å root –ø—Ä–∞–≤–∞."
  RESULT_ADMIN_USER="‚úÖ"
else
  echo "‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª."
  RESULT_ADMIN_USER="‚ùå"
  echo "RESULT_ADMIN_USER=\"$RESULT_ADMIN_USER\"" >> .setup.env
  exit 1
fi

# –ó–∞–±—Ä–∞–Ω–∞ –∑–∞ root –≤—Ö–æ–¥ —á—Ä–µ–∑ SSH
if sudo grep -q "^PermitRootLogin" /etc/ssh/sshd_config; then
  sudo sed -i 's/^PermitRootLogin.*/PermitRootLogin no/' /etc/ssh/sshd_config
else
  echo "PermitRootLogin no" | sudo tee -a /etc/ssh/sshd_config > /dev/null
fi
sudo systemctl restart ssh
echo "üîí Root –¥–æ—Å—Ç—ä–ø—ä—Ç —á—Ä–µ–∑ SSH –µ –∑–∞–±—Ä–∞–Ω–µ–Ω."

# –ó–∞–ø–∏—Å–≤–∞–Ω–µ –≤ .setup.env
echo "RESULT_ADMIN_USER=\"$RESULT_ADMIN_USER\"" >> .setup.env
echo "ADMIN_USER=\"$ADMIN_USER\"" >> .setup.env

# üîö –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –æ—Ç —Å–ø–∏—Å—ä–∫–∞:
sed -i "/^$MODULE_NAME$/d" todo.modules

# üîÑ –ü—Ä–æ–¥—ä–ª–∂–µ–Ω–∏–µ:
echo ""
read -p "‚û°Ô∏è –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–Ω–µ –∫—ä–º —Å–ª–µ–¥–≤–∞—â–∏—è –º–æ–¥—É–ª? [Enter –∑–∞ –î–ê, 'q' –∑–∞ –ø—Ä–µ–∫—Ä–∞—Ç—è–≤–∞–Ω–µ]: " next
if [[ "$next" == "q" || "$next" == "Q" ]]; then
  echo "‚õî –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è —Å–ª–µ–¥ –º–æ–¥—É–ª 8."
  exit 0
fi
echo ""
echo ""


# === [–ú–û–î–£–õ 9] –ö–û–ù–§–ò–ì–£–†–ò–†–ê–ù–ï –ù–ê UFW –ò –î–ï–ê–ö–¢–ò–í–ê–¶–ò–Ø –ù–ê –î–†–£–ì–ò FIREWALL –ü–û–†–¢–û–í–ï ==============
MODULE_NAME="mod_09_firewall_setup"
echo "[9] –ö–û–ù–§–ò–ì–£–†–ò–†–ê–ù–ï –ù–ê UFW –ò –î–ï–ê–ö–¢–ò–í–ê–¶–ò–Ø –ù–ê –î–†–£–ì–ò FIREWALL..."
echo "-------------------------------------------------------------------------"
echo ""

RESULT_FIREWALL_SETUP="‚ùî"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –º–æ–¥—É–ª—ä—Ç –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω
if ! grep -q "^$MODULE_NAME\b" todo.modules; then
  echo "üîÅ –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ –Ω–∞ $MODULE_NAME (–≤–µ—á–µ –∏–∑–ø—ä–ª–Ω–µ–Ω –∏–ª–∏ –Ω–µ –µ –≤ —Å–ø–∏—Å—ä–∫–∞)..."
  return 0 2>/dev/null || exit 0
fi

FIREWALL_SYSTEM="none"

# --- –î–µ–∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ –¥—Ä—É–≥–∏ –∑–∞—â–∏—Ç–Ω–∏ —Å—Ç–µ–Ω–∏ ---
if command -v firewalld >/dev/null 2>&1; then
  echo "‚ùå –ó–∞—Å–µ—á–µ–Ω–∞ –Ω–µ–ø–æ–¥–¥—ä—Ä–∂–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞: firewalld ‚Äì —â–µ –±—ä–¥–µ –ø—Ä–µ–º–∞—Ö–Ω–∞—Ç–∞."
  sudo systemctl stop firewalld
  sudo systemctl disable firewalld
  sudo apt-get remove -y firewalld
elif command -v iptables >/dev/null 2>&1; then
  echo "‚ùå –ó–∞—Å–µ—á–µ–Ω–∞ –Ω–µ–ø–æ–¥–¥—ä—Ä–∂–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–∞: iptables ‚Äì —â–µ –±—ä–¥–µ –ø—Ä–µ–º–∞—Ö–Ω–∞—Ç–∞."
  sudo iptables -F
  sudo apt-get remove -y iptables
fi

# --- –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ UFW, –∞–∫–æ –ª–∏–ø—Å–≤–∞ ---
if ! dpkg -s ufw >/dev/null 2>&1; then
  echo "üì¶ UFW –Ω–µ –µ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω. –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–º–µ..."
  sudo apt-get update
  sudo apt-get install -y ufw
  INSTALL_SUCCESS=$?
else
  echo "‚úÖ UFW –≤–µ—á–µ –µ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω."
  INSTALL_SUCCESS=0
fi

if [[ "$INSTALL_SUCCESS" -ne 0 ]]; then
  echo "‚ùå –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–Ω—Å—Ç–∞–ª–∞—Ü–∏—è—Ç–∞ –Ω–∞ UFW!"
  RESULT_FIREWALL_SETUP="‚ùå"
  echo "RESULT_FIREWALL_SETUP=\"$RESULT_FIREWALL_SETUP\"" >> .setup.env
  exit 1
fi

FIREWALL_SYSTEM="ufw"
echo "FIREWALL_SYSTEM=ufw" >> .setup.env

# --- –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ SSH_PORT, –∞–∫–æ –µ –Ω–∞–ª–∏—á–µ–Ω ---
if [[ -f .setup.env ]]; then
  source .setup.env
fi

if [[ -n "$SSH_PORT" ]]; then
  echo "üîê –†–∞–∑—Ä–µ—à–∞–≤–∞–Ω–µ –Ω–∞ SSH –ø–æ—Ä—Ç: $SSH_PORT"
  sudo ufw allow "$SSH_PORT"/tcp
else
  echo "‚ö†Ô∏è SSH –ø–æ—Ä—Ç –Ω–µ –µ –æ—Ç–∫—Ä–∏—Ç. –ü—Ä–æ–ø—É—Å–∫–∞ —Å–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ."
fi

# --- –í—ä–≤–µ–∂–¥–∞–Ω–µ –Ω–∞ –¥–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∏ –ø–æ—Ä—Ç–æ–≤–µ ---
echo ""
echo "üîß –í–™–í–ï–î–ï–¢–ï –î–û–ü–™–õ–ù–ò–¢–ï–õ–ù–ò –ü–û–†–¢–û–í–ï –ó–ê –û–¢–í–ê–†–Ø–ù–ï (ENTER –∑–∞ –∫—Ä–∞–π, 'q' –∑–∞ –∏–∑—Ö–æ–¥)"
PORT_LIST=()

while true; do
  printf "‚û§ –ü–æ—Ä—Ç: "
  read -r port

  if [[ "$port" == "q" || "$port" == "Q" ]]; then
    echo "‚ùé –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è."
    exit 0
  elif [[ -z "$port" ]]; then
    break
  elif ! [[ "$port" =~ ^[0-9]+$ ]] || (( port < 1 || port > 65535 )); then
    echo "‚ùå –ù–µ–≤–∞–ª–∏–¥–µ–Ω –ø–æ—Ä—Ç. –ò–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ —á–∏—Å–ª–æ –º–µ–∂–¥—É 1 –∏ 65535."
  elif [[ " ${PORT_LIST[*]} " =~ " $port " ]]; then
    echo "‚ö†Ô∏è –ü–æ—Ä—Ç—ä—Ç –≤–µ—á–µ –µ –¥–æ–±–∞–≤–µ–Ω."
  else
    PORT_LIST+=("$port")
    sudo ufw allow "$port"/tcp
    echo "‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω –ø–æ—Ä—Ç: $port"
  fi
done

# --- –ó–∞–ø–∏—Å –Ω–∞ –ø–æ—Ä—Ç–æ–≤–µ—Ç–µ –≤—ä–≤ .setup.env (–ø–æ –∏–∑–±–æ—Ä) ---
echo "PORT_LIST=\"${PORT_LIST[*]}\"" >> .setup.env

echo ""
echo "‚úÖ –ü—Ä–∞–≤–∏–ª–∞—Ç–∞ –∑–∞ UFW —Å–∞ –ø–æ–¥–≥–æ—Ç–≤–µ–Ω–∏, –Ω–æ –∑–∞—â–∏—Ç–Ω–∞—Ç–∞ —Å—Ç–µ–Ω–∞ –≤—Å–µ –æ—â–µ –ù–ï –µ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω–∞."
echo "   –¢–æ–≤–∞ —â–µ –±—ä–¥–µ –Ω–∞–ø—Ä–∞–≤–µ–Ω–æ –≤ —Å–ª–µ–¥–≤–∞—â–∏—è –º–æ–¥—É–ª."

# –£—Å–ø–µ—à–µ–Ω —Ä–µ–∑—É–ª—Ç–∞—Ç
RESULT_FIREWALL_SETUP="‚úÖ"
echo "RESULT_FIREWALL_SETUP=\"$RESULT_FIREWALL_SETUP\"" >> .setup.env

# üîö –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –æ—Ç —Å–ø–∏—Å—ä–∫–∞:
sed -i "/^$MODULE_NAME$/d" todo.modules

# üîÑ –ü—Ä–æ–¥—ä–ª–∂–µ–Ω–∏–µ:
echo ""
read -p "‚û°Ô∏è –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–Ω–µ –∫—ä–º —Å–ª–µ–¥–≤–∞—â–∏—è –º–æ–¥—É–ª? [Enter –∑–∞ –î–ê, 'q' –∑–∞ –ø—Ä–µ–∫—Ä–∞—Ç—è–≤–∞–Ω–µ]: " next
if [[ "$next" == "q" || "$next" == "Q" ]]; then
  echo "‚õî –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è —Å–ª–µ–¥ –º–æ–¥—É–ª 9."
  exit 0
fi
echo ""
echo ""


# === [–ú–û–î–£–õ 10] TRUSTED –ú–†–ï–ñ–ò –ò –ê–ö–¢–ò–í–ò–†–ê–ù–ï –ù–ê UFW ============================
MODULE_NAME="mod_10_firewall_trusted"
if ! grep -q "^$MODULE_NAME\b" todo.modules; then
  echo "üîÅ –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ –Ω–∞ $MODULE_NAME (–≤–µ—á–µ –∏–∑–ø—ä–ª–Ω–µ–Ω –∏–ª–∏ –Ω–µ –µ –≤ —Å–ø–∏—Å—ä–∫–∞)..."
  return 0 2>/dev/null || exit 0
fi

echo "[10] –î–û–ë–ê–í–Ø–ù–ï –ù–ê TRUSTED –ú–†–ï–ñ–ò –ò –ê–ö–¢–ò–í–ò–†–ê–ù–ï –ù–ê UFW..."
echo "-------------------------------------------------------------------------"
echo ""

# –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –≤–µ—á–µ –ø–æ–¥–≥–æ—Ç–≤–µ–Ω–∏ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∏
if [[ -f .setup.env ]]; then
  source .setup.env
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –Ω–∞–ª–∏—á–µ–Ω UFW
if ! command -v ufw >/dev/null 2>&1; then
  echo "‚ùå –ì—Ä–µ—à–∫–∞: UFW –Ω–µ –µ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω. –°–∫—Ä–∏–ø—Ç—ä—Ç –Ω–µ –º–æ–∂–µ –¥–∞ –ø—Ä–æ–¥—ä–ª–∂–∏."
  RESULT_TRUSTED_NETS="‚ùå"
  echo "RESULT_TRUSTED_NETS=\"$RESULT_TRUSTED_NETS\"" >> .setup.env
  exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ —â–µ —Å–µ –∏–∑–ø–æ–ª–∑–≤–∞—Ç trusted –º—Ä–µ–∂–∏
TRUSTED_NETS=()
while true; do
  printf "üåê –©–µ –∏–∑–ø–æ–ª–∑–≤–∞—Ç–µ –ª–∏ –¥–æ—Å—Ç—ä–ø –æ—Ç —á–∞—Å—Ç–Ω–∞ (trusted) –º—Ä–µ–∂–∞? (–Ω–∞–ø—Ä. VPN, –≤—ä—Ç—Ä–µ—à–Ω–∞ LAN)? (y / n / q): "
  read -r use_trust

  case "$use_trust" in
    [Qq]*) echo "‚ùé –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è."
           RESULT_TRUSTED_NETS="‚ùå"
           echo "RESULT_TRUSTED_NETS=\"$RESULT_TRUSTED_NETS\"" >> .setup.env
           exit 0 ;;
    [Nn]*) echo "üîí –ù—è–º–∞ –¥–∞ —Å–µ –¥–æ–±–∞–≤—è—Ç –¥–æ–≤–µ—Ä–µ–Ω–∏ –º—Ä–µ–∂–∏."
           break ;;
    [Yy]*)
      echo ""
      echo "üß© –í—ä–≤–µ–∂–¥–∞–π—Ç–µ –ø–æ –µ–¥–Ω–∞ –º—Ä–µ–∂–∞ –≤ CIDR —Ñ–æ—Ä–º–∞—Ç (–Ω–∞–ø—Ä. 10.8.0.0/24)."
      echo "üëâ –ù–∞—Ç–∏—Å–Ω–µ—Ç–µ Enter –±–µ–∑ –≤—ä–≤–µ–∂–¥–∞–Ω–µ –∑–∞ –∫—Ä–∞–π, –∏–ª–∏ –≤—ä–≤–µ–¥–µ—Ç–µ 'q' –∑–∞ –ø—Ä–µ–∫—Ä–∞—Ç—è–≤–∞–Ω–µ."
      echo ""
      while true; do
        printf "‚û§ –ú—Ä–µ–∂–∞: "
        read -r net

        if [[ "$net" == "q" || "$net" == "Q" ]]; then
          echo "‚ùé –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è."
          RESULT_TRUSTED_NETS="‚ùå"
          echo "RESULT_TRUSTED_NETS=\"$RESULT_TRUSTED_NETS\"" >> .setup.env
          exit 0
        elif [[ -z "$net" ]]; then
          break
        elif [[ "$net" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+/[0-9]+$ ]]; then
          TRUSTED_NETS+=("$net")
          echo "‚úÖ –î–æ–±–∞–≤–µ–Ω–∞ –º—Ä–µ–∂–∞: $net"
        else
          echo "‚ùå –ù–µ–≤–∞–ª–∏–¥–µ–Ω —Ñ–æ—Ä–º–∞—Ç. –ò–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ CIDR, –Ω–∞–ø—Ä. 192.168.1.0/24"
        fi
      done
      break
      ;;
    *) echo "‚ùå –ú–æ–ª—è, –æ—Ç–≥–æ–≤–æ—Ä–µ—Ç–µ —Å 'y', 'n' –∏–ª–∏ 'q'." ;;
  esac
done

# –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª–∞—Ç–∞ –≤ UFW
for net in "${TRUSTED_NETS[@]}"; do
  sudo ufw allow from "$net"
  echo "‚úÖ –†–∞–∑—Ä–µ—à–µ–Ω –¥–æ—Å—Ç—ä–ø –æ—Ç –¥–æ–≤–µ—Ä–µ–Ω–∞ –º—Ä–µ–∂–∞: $net"
done

# –ó–∞–ø–∏—Å –≤ .setup.env (–ø–æ –∏–∑–±–æ—Ä)
echo "TRUSTED_NETS=\"${TRUSTED_NETS[*]}\"" >> .setup.env

# üîê –§–∏–Ω–∞–ª–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω–µ –Ω–∞ UFW
echo ""
echo "üü¢ –ê–∫—Ç–∏–≤–∏—Ä–∞–Ω–µ –Ω–∞ –∑–∞—â–∏—Ç–Ω–∞—Ç–∞ —Å—Ç–µ–Ω–∞ UFW..."
if sudo ufw --force enable; then
  echo "‚úÖ –ó–∞—â–∏—Ç–Ω–∞—Ç–∞ —Å—Ç–µ–Ω–∞ –±–µ—à–µ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ."
  RESULT_TRUSTED_NETS="‚úÖ"
else
  echo "‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω–µ –Ω–∞ UFW!"
  RESULT_TRUSTED_NETS="‚ùå"
  echo "RESULT_TRUSTED_NETS=\"$RESULT_TRUSTED_NETS\"" >> .setup.env
  exit 1
fi

# –ó–∞–ø–∏—Å–≤–∞–Ω–µ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∞
echo "RESULT_TRUSTED_NETS=\"$RESULT_TRUSTED_NETS\"" >> .setup.env

# üîö –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –æ—Ç —Å–ø–∏—Å—ä–∫–∞:
sed -i "/^$MODULE_NAME$/d" todo.modules

# üîÑ –ü—Ä–æ–¥—ä–ª–∂–µ–Ω–∏–µ:
echo ""
read -p "‚û°Ô∏è –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–Ω–µ –∫—ä–º —Å–ª–µ–¥–≤–∞—â–∏—è –º–æ–¥—É–ª? [Enter –∑–∞ –î–ê, 'q' –∑–∞ –ø—Ä–µ–∫—Ä–∞—Ç—è–≤–∞–Ω–µ]: " next
if [[ "$next" == "q" || "$next" == "Q" ]]; then
  echo "‚õî –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è —Å–ª–µ–¥ –º–æ–¥—É–ª 6."
  exit 0
fi
echo ""
echo ""

# === [–ú–û–î–£–õ 11] –û–ë–û–ë–©–ï–ù–ò–ï –ù–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø–¢–ê –ò –†–ï–°–¢–ê–†–¢ ========================
MODULE_NAME="mod_11_summary_reboot"
if ! grep -q "^$MODULE_NAME\b" todo.modules; then
  echo "üîÅ –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ –Ω–∞ $MODULE_NAME (–≤–µ—á–µ –∏–∑–ø—ä–ª–Ω–µ–Ω –∏–ª–∏ –Ω–µ –µ –≤ —Å–ø–∏—Å—ä–∫–∞)..."
  return 0 2>/dev/null || exit 0
fi

echo "[11] –û–ë–û–ë–©–ï–ù–ò–ï –ù–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø–¢–ê –ò –†–ï–°–¢–ê–†–¢..."
echo "-------------------------------------------------------------------------"
echo ""

# –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç .setup.env
if [[ -f .setup.env ]]; then
  source .setup.env
else
  echo "‚ö†Ô∏è –õ–∏–ø—Å–≤–∞ —Ñ–∞–π–ª .setup.env ‚Äì –Ω—è–º–∞ –Ω–∞–ª–∏—á–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Ç–∞."
fi

# –ò–∑–≤–µ–∂–¥–∞–Ω–µ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ
echo "üìã –°–™–°–¢–û–Ø–ù–ò–ï –ù–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø–¢–ê:"
echo ""
printf "üåê IP –∞–¥—Ä–µ—Å –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞:           %s\n" "$(curl -s ifconfig.me)"
printf "üåç FQDN (hostname):               %s\n" "$(hostname)"
printf "üîê SSH –ø–æ—Ä—Ç:                      %s\n" "${SSH_PORT:-‚ùî –Ω–µ –µ –∑–∞–¥–∞–¥–µ–Ω}"
printf "üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª:   %s\n" "${ADMIN_USER:-‚ùî –Ω–µ –µ –∑–∞–¥–∞–¥–µ–Ω}"
printf "üõ°Ô∏è  –ó–∞—â–∏—Ç–Ω–∞ —Å—Ç–µ–Ω–∞ (FIREWALL):      %s\n" "${FIREWALL_SYSTEM:-‚ùî –Ω–µ –µ –∑–∞–¥–∞–¥–µ–Ω–∞}"
printf "üö™ –û—Ç–≤–æ—Ä–µ–Ω–∏ –ø–æ—Ä—Ç–æ–≤–µ:              %s\n" "${PORT_LIST:-‚ùî –Ω—è–º–∞ –≤—ä–≤–µ–¥–µ–Ω–∏}"
printf "üåê –î–æ–≤–µ—Ä–µ–Ω–∏ –º—Ä–µ–∂–∏ (VPN/LAN):      %s\n" "${TRUSTED_NETS:-‚ùî –Ω—è–º–∞ –≤—ä–≤–µ–¥–µ–Ω–∏}"
printf "üåê –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏:                   %s\n" "${RESULT_LOCALES:-‚ùî}"
printf "üïí –í—Ä–µ–º–µ–≤–∞ –∑–æ–Ω–∞:                  %s\n" "${RESULT_TIMEZONE:-‚ùî}"
printf "‚è±Ô∏è –í—Ä–µ–º–µ–≤–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è:         %s\n" "${RESULT_NTP_SYNC:-‚ùî}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ UFW –µ –∞–∫—Ç–∏–≤–µ–Ω
if sudo ufw status | grep -iq "inactive"; then
  echo "‚ùå UFW –ù–ï –ï –ê–ö–¢–ò–í–ï–ù! –ú–æ–ª—è, –∞–∫—Ç–∏–≤–∏—Ä–∞–π—Ç–µ –≥–æ –ø—Ä–µ–¥–∏ —Ä–µ—Å—Ç–∞—Ä—Ç."
  read -p "‚û°Ô∏è –ê–∫—Ç–∏–≤–∏—Ä–∞–Ω–µ –Ω–∞ UFW —Å–µ–≥–∞? (y / q): " activate_ufw
  if [[ "$activate_ufw" =~ ^[Yy]$ ]]; then
    sudo ufw --force enable
    echo "‚úÖ UFW –±–µ—à–µ –∞–∫—Ç–∏–≤–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ."
  else
    echo "‚ùé –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω. –ù–µ –µ –±–µ–∑–æ–ø–∞—Å–Ω–æ –¥–∞ —Ä–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞—Ç–µ —Å—ä—Ä–≤—ä—Ä–∞ –±–µ–∑ –∞–∫—Ç–∏–≤–µ–Ω firewall."
    exit 1
  fi
else
  echo "‚úÖ UFW –µ –∞–∫—Ç–∏–≤–µ–Ω."
fi

# üîÅ –ü–∏—Ç–∞–Ω–µ –∑–∞ —Ä–µ—Å—Ç–∞—Ä—Ç —Å –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∏—Ç–µ —Ñ–∞–π–ª–æ–≤–µ
echo ""
while true; do
  echo "‚ôªÔ∏è –ñ–µ–ª–∞–µ—Ç–µ –ª–∏ –¥–∞ —Ä–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞—Ç–µ —Å–∏—Å—Ç–µ–º–∞—Ç–∞ —Å–µ–≥–∞?"
  read -p "–í—ä–≤–µ–¥–µ—Ç–µ 'r' –∑–∞ —Ä–µ—Å—Ç–∞—Ä—Ç, 'q' –∑–∞ –∏–∑—Ö–æ–¥ –±–µ–∑ —Ä–µ—Å—Ç–∞—Ä—Ç, –∏–ª–∏ Enter –∑–∞ –∫—Ä–∞–π: " restart_choice
  case "$restart_choice" in
    [Rr]*)
      echo "üßπ –ò–∑—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∏—Ç–µ —Ñ–∞–π–ª–æ–≤–µ..."
      rm -f .setup.env todo.modules
      echo "üîÑ –†–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Å–∏—Å—Ç–µ–º–∞—Ç–∞..."
      sleep 2
      sudo reboot
      ;;
    [Qq]*)
      echo "‚õî –°–∫—Ä–∏–ø—Ç—ä—Ç –∑–∞–≤—ä—Ä—à–∏ –±–µ–∑ —Ä–µ—Å—Ç–∞—Ä—Ç. –ú–æ–ª—è, —Ä–µ—Å—Ç–∞—Ä—Ç–∏—Ä–∞–π—Ç–µ —Ä—ä—á–Ω–æ –ø–æ-–∫—ä—Å–Ω–æ."
      break
      ;;
    "")
      echo "‚úÖ –°–∫—Ä–∏–ø—Ç—ä—Ç –∑–∞–≤—ä—Ä—à–∏ —É—Å–ø–µ—à–Ω–æ. UFW –µ –∞–∫—Ç–∏–≤–µ–Ω. –ù—è–º–∞ —Ä–µ—Å—Ç–∞—Ä—Ç."
      break
      ;;
    *)
      echo "‚ùå –ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ 'r', 'q' –∏–ª–∏ –Ω–∞—Ç–∏—Å–Ω–µ—Ç–µ Enter."
      ;;
  esac
done

# üîö –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –æ—Ç —Å–ø–∏—Å—ä–∫–∞:
sed -i "/^$MODULE_NAME$/d" todo.modules

# --------- –ö—Ä–∞–π –Ω–∞ —Å–∫—Ä–∏–ø—Ç–∞ ---------

