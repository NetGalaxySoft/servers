#!/usr/bin/env bash

# ==========================================================================
#  vps-monitoring-qsetup ‚Äî –ò–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–µ –Ω–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–µ–∫ –∑–∞ MonHub
# --------------------------------------------------------------------------
#  –í–µ—Ä—Å–∏—è: 0.1-test
#  –î–∞—Ç–∞: 2025-08-10
#  –ê–≤—Ç–æ—Ä: NetGalaxySoft
# ==========================================================================
#
#  –¢–æ–∑–∏ —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–ø–æ–ª–∞–≥–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–µ–∫ (Prometheus, Grafana, Alertmanager,
#  Loki, Promtail, node_exporter, blackbox_exporter) –≤—ä—Ä—Ö—É MonHub.
#  –ò–∑–ø—ä–ª–Ω—è–≤–∞ —Å–µ –¥–∏—Ä–µ–∫—Ç–Ω–æ –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞ (MonHub), –±–µ–∑ SSH –∫—ä–º –¥—Ä—É–≥–∏ –º–∞—à–∏–Ω–∏.
#
#  –ï—Ç–∞–ø–∏:
#    1. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –Ω–∞ —Å—Ä–µ–¥–∞—Ç–∞ –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏—Ç–µ
#    2. –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ
#    3. –†–∞–∑–ø–æ–ª–∞–≥–∞–Ω–µ –Ω–∞ Docker Compose —Å—Ç–µ–∫–∞
#    4. –ü–æ–ª–∏—Ç–∏–∫–∞ –∑–∞ –¥–æ—Å—Ç—ä–ø (UI —Å–∞–º–æ –ø—Ä–µ–∑ SSH —Ç—É–Ω–µ–ª; data —Å–∞–º–æ –ø–æ VPN)
#    5. –ü—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç
# ==========================================================================

set -euo pipefail

# === –ü–û–ú–û–©–ù–ê –ò–ù–§–û–†–ú–ê–¶–ò–Ø ===================================================
show_help() {
  echo "–ò–∑–ø–æ–ª–∑–≤–∞–Ω–µ: vps-monitoring-qsetup.sh [–æ–ø—Ü–∏—è]"
  echo ""
  echo "–†–∞–∑–ø–æ–ª–∞–≥–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–µ–∫ –∑–∞ MonHub (Prometheus, Grafana, Alertmanager,"
  echo "Loki, Promtail, node_exporter, blackbox_exporter) —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∏—Ç–µ –Ω–∞ NetGalaxySoft."
  echo ""
  echo "–û–ø—Ü–∏–∏:"
  echo "  --version       –ü–æ–∫–∞–∑–≤–∞ –≤–µ—Ä—Å–∏—è—Ç–∞ –Ω–∞ —Å–∫—Ä–∏–ø—Ç–∞"
  echo "  --help          –ü–æ–∫–∞–∑–≤–∞ —Ç–∞–∑–∏ –ø–æ–º–æ—â"
}

# === –û–ë–†–ê–ë–û–¢–ö–ê –ù–ê –û–ü–¶–ò–ò ====================================================
if [[ $# -gt 0 ]]; then
  case "$1" in
    --version)
      echo "vps-monitoring-qsetup –≤–µ—Ä—Å–∏—è 0.1-test (10 –∞–≤–≥—É—Å—Ç 2025 –≥.)"
      exit 0
      ;;
    --help)
      show_help
      exit 0
      ;;
    *)
      echo "‚ùå –ù–µ—Ä–∞–∑–ø–æ–∑–Ω–∞—Ç–∞ –æ–ø—Ü–∏—è: $1"
      show_help
      exit 1
      ;;
  esac
fi

# =====================================================================
# vps-monhub-qsetup.sh ‚Äî –¶–µ–Ω—Ç—Ä–∞–ª–µ–Ω —Å—ä—Ä–≤—ä—Ä –∑–∞ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∏ –ª–æ–≥–æ–≤–µ
# –í–µ—Ä—Å–∏—è: 1.0 (Ubuntu 24.04 amd64)
# –õ–∏—Ü–µ–Ω–∑: NetGalaxySoft internal
# =====================================================================

# -------------------- –û–±—â–∏ –ø—Ä–æ–º–µ–Ω–ª–∏–≤–∏ --------------------
SETUP_DIR="/etc/netgalaxy"
SETUP_ENV_FILE="$SETUP_DIR/setup.env"
MODULES_FILE="$SETUP_DIR/todo.modules"
STAMP_DIR="$SETUP_DIR/stamps"
COMPOSE_DIR="/opt/netgalaxy/monhub"
PROM_DIR="$COMPOSE_DIR/prometheus"
ALERT_DIR="$COMPOSE_DIR/alertmanager"
LOKI_DIR="$COMPOSE_DIR/loki"
GRAFANA_DIR="$COMPOSE_DIR/grafana"
LOG_DIR="/var/log/netgalaxy"
DOMAIN_EXPECTED="${DOMAIN_EXPECTED:-}"     # –ü–æ–∑–≤–æ–ª—è–≤–∞–º–µ –ø–æ–¥–∞–≤–∞–Ω–µ –æ—Ç–≤—ä–Ω: DOMAIN_EXPECTED=ns-monitor.netgalaxy.eu bash ...
IP_EXPECTED="${IP_EXPECTED:-}"             # –ü–æ–∑–≤–æ–ª—è–≤–∞–º–µ –ø–æ–¥–∞–≤–∞–Ω–µ –æ—Ç–≤—ä–Ω: IP_EXPECTED=203.0.113.10 bash ...

# -------------------- –ü–æ–º–æ—â–Ω–∏ —Ñ—É–Ω–∫—Ü–∏–∏ --------------------
WRITES_ENABLED=0

log()  { echo -e "$*"; }
ok()   { echo -e "‚úÖ $*"; }
warn() { echo -e "‚ö†Ô∏è  $*"; }
err()  { echo -e "‚ùå $*" >&2; }

die()  { err "$*"; exit 1; }

# –†–∞–∑—Ä–µ—à–∞–≤–∞ –∑–∞–ø–∏—Å–∏ –ï–î–í–ê —Å–ª–µ–¥ –∫–∞—Ç–æ –ú–æ–¥—É–ª 1 –ø–æ—Ç–≤—ä—Ä–¥–∏, —á–µ –º–æ–∂–µ.
# –¢–∞–∑–∏ —Ñ—É–Ω–∫—Ü–∏—è –ù–ï —Å—ä–∑–¥–∞–≤–∞ setup.env –∏ –ù–ï –ø–∏–ø–∞ /etc/netgalaxy ‚Äî —Å–∞–º–æ –≤–∫–ª—é—á–≤–∞ —Ñ–ª–∞–≥–∞.
enable_writes() {
  WRITES_ENABLED=1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –¥–∞–¥–µ–Ω ‚Äûstamp‚Äú —Ñ–∞–π–ª —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ (–±–µ–∑ –¥–∞ —Å—ä–∑–¥–∞–≤–∞–º–µ –Ω–∏—â–æ)
already_done() {
  local stamp="$1"
  [[ -f "$STAMP_DIR/$stamp" ]]
}

# –°–ª–∞–≥–∞ ‚Äûstamp‚Äú —Å–∞–º–æ –∞–∫–æ –µ —Ä–∞–∑—Ä–µ—à–µ–Ω –∑–∞–ø–∏—Å –∏ –±–∞–∑–æ–≤–∞—Ç–∞ –ø–∞–ø–∫–∞ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞.
stamp() {
  local stamp="$1"
  [[ "$WRITES_ENABLED" -eq 1 ]] || die "–ó–∞–±—Ä–∞–Ω–µ–Ω –∑–∞–ø–∏—Å (stamp): –æ–ø–∏—Ç–∞–π —Å–ª–µ–¥ –ú–æ–¥—É–ª 1."
  [[ -d "$SETUP_DIR" ]] || die "–õ–∏–ø—Å–≤–∞ $SETUP_DIR; –±–∞–∑–æ–≤–∏—è—Ç —Å–∫—Ä–∏–ø—Ç –Ω–µ –µ –∑–∞–≤—ä—Ä—à–∏–ª –∫–æ—Ä–µ–∫—Ç–Ω–æ."
  # –°—ä–∑–¥–∞–≤–∞–º–µ —Å–∞–º–æ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ç–∞ –∑–∞ stamps, –Ω–æ –ù–ï –ø–∏–ø–∞–º–µ setup.env
  sudo mkdir -p "$STAMP_DIR"
  sudo touch "$STAMP_DIR/$stamp"
}

# –ú–∞—Ä–∫–∏—Ä–∞ —É—Å–ø–µ—Ö –≤ setup.env, –±–µ–∑ –¥–∞ –≥–æ —Å—ä–∑–¥–∞–≤–∞. –ì—Ä–µ—à–∫–∞, –∞–∫–æ —Ñ–∞–π–ª—ä—Ç –ª–∏–ø—Å–≤–∞.
mark_success() {
  local key="$1"
  [[ "$WRITES_ENABLED" -eq 1 ]] || die "–ó–∞–±—Ä–∞–Ω–µ–Ω –∑–∞–ø–∏—Å (mark_success): –æ–ø–∏—Ç–∞–π —Å–ª–µ–¥ –ú–æ–¥—É–ª 1."
  [[ -f "$SETUP_ENV_FILE" ]] || die "–õ–∏–ø—Å–≤–∞ $SETUP_ENV_FILE; –±–∞–∑–æ–≤–∏—è—Ç —Å–∫—Ä–∏–ø—Ç –Ω–µ –µ –∑–∞–≤—ä—Ä—à–∏–ª –∫–æ—Ä–µ–∫—Ç–Ω–æ."
  if sudo grep -q "^$key=" "$SETUP_ENV_FILE" 2>/dev/null; then
    sudo sed -i "s|^$key=.*|$key=‚úÖ|" "$SETUP_ENV_FILE"
  else
    echo "$key=‚úÖ" | sudo tee -a "$SETUP_ENV_FILE" >/dev/null
  fi
}


NETGALAXY_DIR="/etc/netgalaxy"
MODULES_FILE="$NETGALAXY_DIR/todo.modules"
SETUP_ENV_FILE="$NETGALAXY_DIR/setup.env"

# =====================================================================
# [–ú–û–î–£–õ 1] –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–ù–ò –ü–†–û–í–ï–†–ö–ò –ò –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
# =====================================================================
echo "[1] –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–ù–ò –ü–†–û–í–ï–†–ö–ò –ù–ê –°–ò–°–¢–ï–ú–ê..."
echo "-----------------------------------------------------------"
echo ""

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ root –ø—Ä–∞–≤–∞
if [[ $EUID -ne 0 ]]; then
  echo "‚ùå –¢—Ä—è–±–≤–∞ –¥–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞—Ç–µ —Å–∫—Ä–∏–ø—Ç–∞ —Å root –ø—Ä–∞–≤–∞ (sudo)."
  exit 1
fi

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –±–∞–∑–æ–≤–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
if [[ ! -f "$SETUP_ENV_FILE" ]] || ! sudo grep -q '^SETUP_VPS_BASE_STATUS=‚úÖ' "$SETUP_ENV_FILE" 2>/dev/null; then
  echo "üõë –°—ä—Ä–≤—ä—Ä—ä—Ç –µ —Å –Ω–µ—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –Ω–∞—á–∞–ª–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è. –ú–æ–ª—è, —Å—Ç–∞—Ä—Ç–∏—Ä–∞–π—Ç–µ —Ñ–∞–π–ª–∞ vps-base-qsetup.sh –∏ –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ."
  echo "üóëÔ∏è –ü—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –Ω–∞ —Å–∫—Ä–∏–ø—Ç–∞."
  [[ -f "$0" ]] && rm -- "$0"
  exit 1
fi

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ —Å–∫—Ä–∏–ø—Ç—ä—Ç –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ
if [[ -f "$SETUP_ENV_FILE" ]] && sudo grep -q '^SETUP_VPS_MONITORING_STATUS=‚úÖ' "$SETUP_ENV_FILE"; then
  echo "üõë –¢–æ–∑–∏ —Å–∫—Ä–∏–ø—Ç –≤–µ—á–µ –µ –±–∏–ª –∏–∑–ø—ä–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ –Ω–∞ —Ç–æ–∑–∏ —Å—ä—Ä–≤—ä—Ä."
  echo "–ü–æ–≤—Ç–æ—Ä–Ω–æ –∏–∑–ø—ä–ª–Ω–µ–Ω–∏–µ –Ω–µ –µ –ø–æ–∑–≤–æ–ª–µ–Ω–æ, –∑–∞ –¥–∞ —Å–µ –∏–∑–±–µ–≥–Ω–µ –ø–æ–≤—Ä–µ–¥–∞ –Ω–∞ —Å–∏—Å—Ç–µ–º–∞—Ç–∞."
  [[ -f "$0" ]] && sudo rm -- "$0"
  exit 0
fi

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—Ç–∞ —Å–∏—Å—Ç–µ–º–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—Ç–∞ —Å–∏—Å—Ç–µ–º–∞..."
if [[ -f /etc/os-release ]]; then
  source /etc/os-release
  OS_NAME=$ID
  OS_VERSION=$VERSION_ID
else
  echo "‚ùå –ù–µ—É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä–∏–≤–∞–Ω–µ –Ω–∞ –û–°. –°–∫—Ä–∏–ø—Ç—ä—Ç –∏–∑–∏—Å–∫–≤–∞ Ubuntu –∏–ª–∏ Debian."
  exit 1
fi

SUPPORTED=false
if [[ "$OS_NAME" == "ubuntu" && ( "$OS_VERSION" == "22.04" || "$OS_VERSION" == "24.04" ) ]]; then
  SUPPORTED=true
elif [[ "$OS_NAME" == "debian" && ( "$OS_VERSION" == "11" || "$OS_VERSION" == "12" ) ]]; then
  SUPPORTED=true
fi

if [[ "$SUPPORTED" == false ]]; then
  echo "‚ùå –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—Ç–∞ —Å–∏—Å—Ç–µ–º–∞ $PRETTY_NAME –Ω–µ —Å–µ –ø–æ–¥–¥—ä—Ä–∂–∞ –æ—Ç —Ç–æ–∑–∏ —Å–∫—Ä–∏–ø—Ç."
  echo "–ü–æ–¥–¥—ä—Ä–∂–∞–Ω–∏ —Å–∏—Å—Ç–µ–º–∏: Ubuntu 22.04/24.04, Debian 11/12"
  exit 1
fi

echo "‚úÖ –ó–∞—Å–µ—á–µ–Ω–∞ –ø–æ–¥–¥—ä—Ä–∂–∞–Ω–∞ –û–°: $PRETTY_NAME"
echo ""

# ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –º–æ–¥—É–ª—ä—Ç –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω
if sudo grep -q '^MON_RESULT_MODULE1=‚úÖ' "$SETUP_ENV_FILE" 2>/dev/null; then
  echo "‚ÑπÔ∏è –ú–æ–¥—É–ª 1 –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ. –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ..."
else
  # ‚úÖ –ü–æ—Ç–≤—ä—Ä–∂–¥–µ–Ω–∏–µ –Ω–∞ IP –∞–¥—Ä–µ—Å
  while true; do
    printf "üåê –í—ä–≤–µ–¥–µ—Ç–µ –ø—É–±–ª–∏—á–Ω–∏—è IP –∞–¥—Ä–µ—Å –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞ (–∏–ª–∏ 'q' –∑–∞ –∏–∑—Ö–æ–¥): "
    read SERVER_IP

    if [[ "$SERVER_IP" == "q" || "$SERVER_IP" == "Q" ]]; then
      echo "‚ùé –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è."
      exit 0
    fi

    if ! [[ "$SERVER_IP" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
      echo "‚ùå –ù–µ–≤–∞–ª–∏–¥–µ–Ω IP –∞–¥—Ä–µ—Å. –ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ –≤–∞–ª–∏–¥–µ–Ω IPv4 –∞–¥—Ä–µ—Å (–ø—Ä–∏–º–µ—Ä: 192.168.1.100)."
      continue
    fi

    ACTUAL_IP=$(curl -s -4 ifconfig.me)

    if [[ "$ACTUAL_IP" != "$SERVER_IP" ]]; then
      echo ""
      echo "üö´ –ù–µ—Å—ä–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ! –í—ä–≤–µ–¥–µ–Ω–∏—è—Ç IP ($SERVER_IP) –Ω–µ —Å—ä–≤–ø–∞–¥–∞ —Å —Ä–µ–∞–ª–Ω–∏—è IP –Ω–∞ –º–∞—à–∏–Ω–∞—Ç–∞ ($ACTUAL_IP)."
      echo ""
      read -p "üîÅ –ò—Å–∫–∞—Ç–µ –ª–∏ –¥–∞ –æ–ø–∏—Ç–∞—Ç–µ –æ—Ç–Ω–æ–≤–æ? [Enter –∑–∞ –î–ê, 'q' –∑–∞ –∏–∑—Ö–æ–¥]: " retry
      if [[ "$retry" == "q" || "$retry" == "Q" ]]; then
        echo "‚õî –°–∫—Ä–∏–ø—Ç—ä—Ç –±–µ—à–µ –ø—Ä–µ–∫—Ä–∞—Ç–µ–Ω –æ—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è."
        exit 0
      fi
      echo ""
    else
      echo "‚úÖ –ü–æ—Ç–≤—ä—Ä–¥–µ–Ω–æ: —Å–∫—Ä–∏–ø—Ç—ä—Ç –µ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω –Ω–∞ —Å—ä—Ä–≤—ä—Ä–∞ —Å IP $SERVER_IP."
      break
    fi
  done

  # ‚úÖ –í—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–µ–º–∞—Ö–≤–∞–Ω–µ –Ω–∞ –∑–∞–±—Ä–∞–Ω–∞—Ç–∞ –∑–∞ –ø—Ä–æ–º—è–Ω–∞/–∏–∑—Ç—Ä–∏–≤–∞–Ω–µ
  if [[ -d "$NETGALAXY_DIR" ]]; then
    sudo chown root:root "$NETGALAXY_DIR" "$SETUP_ENV_FILE" "$NETGALAXY_DIR/.nodelete" 2>/dev/null
    sudo chmod 755 "$NETGALAXY_DIR" 2>/dev/null
    sudo chmod 644 "$SETUP_ENV_FILE" 2>/dev/null
    sudo chmod 644 "$NETGALAXY_DIR/.nodelete" 2>/dev/null
    sudo chattr -i "$NETGALAXY_DIR/.nodelete" 2>/dev/null || true
    sudo chattr -i "$MODULES_FILE" 2>/dev/null || true
  fi

  # ‚úÖ –ó–∞–ø–∏—Å –∏–ª–∏ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ SERVER_IP –≤ todo.modules
  if sudo grep -q '^SERVER_IP=' "$MODULES_FILE" 2>/dev/null; then
    sudo sed -i "s|^SERVER_IP=.*|SERVER_IP=\"$SERVER_IP\"|" "$MODULES_FILE"
  else
    echo "SERVER_IP=\"$SERVER_IP\"" | sudo tee -a "$MODULES_FILE" > /dev/null
  fi

  # ‚úÖ –ó–∞–ø–∏—Å –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç –∑–∞ –ú–æ–¥—É–ª 1
  if sudo grep -q '^MON_RESULT_MODULE1=' "$SETUP_ENV_FILE" 2>/dev/null; then
    sudo sed -i 's|^MON_RESULT_MODULE1=.*|MON_RESULT_MODULE1=‚úÖ|' "$SETUP_ENV_FILE"
  else
    echo "MON_RESULT_MODULE1=‚úÖ" | sudo tee -a "$SETUP_ENV_FILE" > /dev/null
  fi
fi
echo ""
echo ""


exit 0
















# =====================================================================
# [–ú–û–î–£–õ 1] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ (FQDN/IP, —Å–∏—Å—Ç–µ–º–Ω–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏)
# =====================================================================
log ""
log "=============================================="
log "[1] –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ò –í–ê–õ–ò–î–ê–¶–ò–ò..."
log "=============================================="
log ""

if ! already_done "M1.init"; then
  ensure_env_files

  HOST_FQDN="$(hostname -f 2>/dev/null || hostname)"
  HOST_IPv4="$(curl -fsS http://checkip.amazonaws.com 2>/dev/null || true)"
  [[ -z "$HOST_IPv4" ]] && HOST_IPv4="$(dig +short myip.opendns.com @resolver1.opendns.com 2>/dev/null || true)"

  # –ó–∞–ø–∏—Å–≤–∞–º–µ –∫–∞–∫–≤–æ—Ç–æ –∑–Ω–∞–µ–º
  if ! sudo grep -q '^MONHUB_HOST_FQDN=' "$SETUP_ENV_FILE" 2>/dev/null; then
    echo "MONHUB_HOST_FQDN=${HOST_FQDN}" | sudo tee -a "$SETUP_ENV_FILE" >/dev/null
  else
    sudo sed -i "s|^MONHUB_HOST_FQDN=.*|MONHUB_HOST_FQDN=${HOST_FQDN}|" "$SETUP_ENV_FILE"
  fi
  if ! sudo grep -q '^MONHUB_HOST_IP=' "$SETUP_ENV_FILE" 2>/dev/null; then
    echo "MONHUB_HOST_IP=${HOST_IPv4}" | sudo tee -a "$SETUP_ENV_FILE" >/dev/null
  else
    sudo sed -i "s|^MONHUB_HOST_IP=.*|MONHUB_HOST_IP=${HOST_IPv4}|" "$SETUP_ENV_FILE"
  fi

  # –ó–∞–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–∏ —Ç–≤—ä—Ä–¥–µ–Ω–∏—è, –∞–∫–æ —Å–∞ –ø–æ–¥–∞–¥–µ–Ω–∏
  if [[ -n "$DOMAIN_EXPECTED" ]] && [[ "$HOST_FQDN" != "$DOMAIN_EXPECTED" ]]; then
    err "FQDN –Ω–µ —Å—ä–≤–ø–∞–¥–∞. –û—á–∞–∫–≤–∞–Ω: $DOMAIN_EXPECTED, —Ä–µ–∞–ª–µ–Ω: $HOST_FQDN"
    exit 10
  fi
  if [[ -n "$IP_EXPECTED" ]] && [[ "$HOST_IPv4" != "$IP_EXPECTED" ]]; then
    err "–ü—É–±–ª–∏—á–Ω–∏—è—Ç IP –Ω–µ —Å—ä–≤–ø–∞–¥–∞. –û—á–∞–∫–≤–∞–Ω: $IP_EXPECTED, —Ä–µ–∞–ª–µ–Ω: $HOST_IPv4"
    exit 11
  fi

  # –°—ä–∑–¥–∞–≤–∞–º–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∑–∞ —Å—Ç–µ–∫–æ–≤–µ—Ç–µ
  sudo mkdir -p "$COMPOSE_DIR" "$PROM_DIR" "$ALERT_DIR" "$LOKI_DIR" "$GRAFANA_DIR" "$LOG_DIR"

  stamp "M1.init"
  mark_success "MONHUB_MODULE1"
  ok "–ú–æ–¥—É–ª 1 –∑–∞–≤—ä—Ä—à–∏."
else
  warn "–ú–æ–¥—É–ª 1 –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ."
fi

# =====================================================================
# [–ú–û–î–£–õ 2] –°–∏—Å—Ç–µ–º–Ω–∏ —ä–ø–¥–µ–π—Ç–∏, ssh —Ç–≤—ä—Ä–¥—è–≤–∞–Ω–µ, UFW
# =====================================================================
log ""
log "=============================================="
log "[2] –°–ò–°–¢–ï–ú–ù–ò –ù–ê–°–¢–†–û–ô–ö–ò: —ä–ø–¥–µ–π—Ç–∏, SSH, UFW..."
log "=============================================="
log ""

if ! already_done "M2.sys"; then
  # –™–ø–¥–µ–π—Ç–∏
  sudo apt-get update -y
  sudo DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y

  # –ú–∏–Ω–∏–º–∞–ª–Ω–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏
  sudo apt-get install -y curl wget gnupg2 ca-certificates jq unzip software-properties-common ufw

  # SSH —Ç–≤—ä—Ä–¥—è–≤–∞–Ω–µ (–±–µ–∑ –¥–∞ –ø—Ä–µ—á–∏–º –Ω–∞ —Ç–µ–∫—É—â–∞—Ç–∞ —Å–µ—Å–∏—è)
  SSHD="/etc/ssh/sshd_config"
  sudo cp -a "$SSHD" "${SSHD}.bak.$(date +%F-%H%M%S)"
  sudo sed -i 's/^#\?PasswordAuthentication .*/PasswordAuthentication no/' "$SSHD"
  sudo sed -i 's/^#\?PermitRootLogin .*/PermitRootLogin no/' "$SSHD"
  sudo sed -i 's/^#\?X11Forwarding .*/X11Forwarding no/' "$SSHD"
  sudo systemctl reload ssh || sudo systemctl restart ssh

  # UFW ‚Äî –ø–æ–∑–≤–æ–ª—è–≤–∞–º–µ —Å–∞–º–æ –Ω—É–∂–Ω–æ—Ç–æ
  sudo ufw --force reset
  sudo ufw default deny incoming
  sudo ufw default allow outgoing
  sudo ufw allow OpenSSH
  sudo ufw allow 3000/tcp    # Grafana
  sudo ufw allow 9090/tcp    # Prometheus
  sudo ufw allow 9093/tcp    # Alertmanager
  sudo ufw allow 3100/tcp    # Loki
  sudo ufw allow 9100/tcp    # node_exporter
  sudo ufw allow 9115/tcp    # blackbox_exporter
  sudo ufw --force enable

  stamp "M2.sys"
  mark_success "MONHUB_MODULE2"
  ok "–ú–æ–¥—É–ª 2 –∑–∞–≤—ä—Ä—à–∏."
else
  warn "–ú–æ–¥—É–ª 2 –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ."
fi

# =====================================================================
# [–ú–û–î–£–õ 3] –ò–Ω—Å—Ç–∞–ª–∞—Ü–∏—è –Ω–∞ Docker Engine + Compose (LTS)
# =====================================================================
log ""
log "=============================================="
log "[3] DOCKER ENGINE + COMPOSE..."
log "=============================================="
log ""

if ! already_done "M3.docker"; then
  # –û—Ñ–∏—Ü–∏–∞–ª–Ω–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –Ω–∞ Docker
  sudo apt-get install -y apt-transport-https ca-certificates curl gnupg
  sudo install -m 0755 -d /etc/apt/keyrings
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  echo \
"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) stable" \
  | sudo tee /etc/apt/sources.list.d/docker.list >/dev/null

  sudo apt-get update -y
  sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

  # –†–∞–∑—Ä–µ—à–∞–≤–∞–º–µ docker —Å—Ä–≤—Å
  sudo systemctl enable --now docker

  stamp "M3.docker"
  mark_success "MONHUB_MODULE3"
  ok "–ú–æ–¥—É–ª 3 –∑–∞–≤—ä—Ä—à–∏."
else
  warn "–ú–æ–¥—É–ª 3 –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ."
fi

# =====================================================================
# [–ú–û–î–£–õ 4] –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞ Prometheus/Alertmanager/Grafana/Loki/Promtail/Exporters
# =====================================================================
log ""
log "=============================================="
log "[4] –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –ù–ê MON STACK..."
log "=============================================="
log ""

if ! already_done "M4.cfg"; then
  # --- Prometheus config ---
  sudo tee "$PROM_DIR/prometheus.yml" >/dev/null <<'YAML'
global:
  scrape_interval: 15s
  evaluation_interval: 15s

scrape_configs:
  - job_name: 'prometheus'
    static_configs:
      - targets: ['prometheus:9090']

  - job_name: 'node_exporter'
    static_configs:
      - targets: ['node_exporter:9100']

  - job_name: 'blackbox_http'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://example.org
        - https://netgalaxy.eu
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox:9115

alerting:
  alertmanagers:
    - static_configs:
        - targets: ['alertmanager:9093']
YAML

  # --- Alertmanager config (dummy, –±–µ–∑ SMTP –∑–∞ —Å–µ–≥–∞) ---
  sudo tee "$ALERT_DIR/alertmanager.yml" >/dev/null <<'YAML'
route:
  receiver: 'dev-null'
  group_by: ['alertname', 'instance']
  group_wait: 10s
  group_interval: 2m
  repeat_interval: 1h

receivers:
  - name: 'dev-null'
YAML

  # --- Loki config ---
  sudo tee "$LOKI_DIR/loki-config.yml" >/dev/null <<'YAML'
auth_enabled: false
server:
  http_listen_port: 3100
common:
  path_prefix: /loki
  storage:
    filesystem:
      chunks_directory: /loki/chunks
      rules_directory: /loki/rules
  replication_factor: 1
schema_config:
  configs:
    - from: 2024-01-01
      store: tsdb
      object_store: filesystem
      schema: v13
      index:
        prefix: index_
        period: 24h
ruler:
  alertmanager_url: http://alertmanager:9093
YAML

  # --- Promtail config (—Å–∏—Å—Ç–µ–º–Ω–∏ –ª–æ–≥–æ–≤–µ) ---
  sudo tee "$COMPOSE_DIR/promtail-config.yml" >/dev/null <<'YAML'
server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  - job_name: system
    static_configs:
      - targets: [localhost]
        labels:
          job: varlogs
          __path__: /var/log/*.log
  - job_name: journal
    journal:
      max_age: 12h
      labels:
        job: systemd-journal
    relabel_configs:
      - source_labels: ['__journal__systemd_unit']
        target_label: 'unit'
YAML

  # --- docker-compose.yml ---
  sudo tee "$COMPOSE_DIR/docker-compose.yml" >/dev/null <<'YAML'
services:
  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks: [mon]

  alertmanager:
    image: prom/alertmanager:latest
    restart: unless-stopped
    volumes:
      - ./alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    ports:
      - '9093:9093'
    networks: [mon]

  node_exporter:
    image: prom/node-exporter:latest
    restart: unless-stopped
    pid: host
    ports:
      - '9100:9100'
    networks: [mon]

  blackbox:
    image: prom/blackbox-exporter:latest
    restart: unless-stopped
    ports:
      - '9115:9115'
    networks: [mon]

  loki:
    image: grafana/loki:2.9.8
    restart: unless-stopped
    command: [ "-config.file=/etc/loki/loki-config.yml" ]
    volumes:
      - ./loki:/etc/loki
      - loki-data:/loki
    ports:
      - '3100:3100'
    networks: [mon]

  promtail:
    image: grafana/promtail:2.9.8
    restart: unless-stopped
    volumes:
      - /var/log:/var/log:ro
      - /var/lib/systemd:/var/lib/systemd:ro
      - ./promtail-config.yml:/etc/promtail/config.yml:ro
    command: [ "-config.file=/etc/promtail/config.yml" ]
    networks: [mon]

  grafana:
    image: grafana/grafana:10.4.8
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks: [mon]

volumes:
  grafana-data: {}
  loki-data: {}

networks:
  mon:
    driver: bridge
YAML

  # –ü—Ä–∞–≤–∞
  sudo chown -R root:root "$COMPOSE_DIR"
  sudo chmod -R 755 "$COMPOSE_DIR"

  stamp "M4.cfg"
  mark_success "MONHUB_MODULE4"
  ok "–ú–æ–¥—É–ª 4 –∑–∞–≤—ä—Ä—à–∏."
else
  warn "–ú–æ–¥—É–ª 4 –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ."
fi

# =====================================================================
# [–ú–û–î–£–õ 5] –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Å—Ç–µ–∫–∞
# =====================================================================
log ""
log "=============================================="
log "[5] –°–¢–ê–†–¢–ò–†–ê–ù–ï –ù–ê STACK-A..."
log "=============================================="
log ""

if ! already_done "M5.up"; then
  pushd "$COMPOSE_DIR" >/dev/null
  sudo docker compose up -d
  popd >/dev/null

  stamp "M5.up"
  mark_success "MONHUB_MODULE5"
  ok "–ú–æ–¥—É–ª 5 –∑–∞–≤—ä—Ä—à–∏. –°—Ç–µ–∫—ä—Ç –µ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω."
else
  warn "–ú–æ–¥—É–ª 5 –≤–µ—á–µ –µ –∏–∑–ø—ä–ª–Ω–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–Ω–µ."
fi

# =====================================================================
# [–ú–û–î–£–õ 6] –û–±–æ–±—â–µ–Ω–∏–µ
# =====================================================================
log ""
log "=============================================="
log "[6] –û–ë–û–ë–©–ï–ù–ò–ï"
log "=============================================="
log ""

GRAFANA_URL="http://$(hostname -I | awk '{print $1}'):3000"
PROM_URL="http://$(hostname -I | awk '{print $1}'):9090"

printf "\n"
printf "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–µ–∫: \n"
printf "  ‚Ä¢ Grafana:        %s (admin / admin)\n" "$GRAFANA_URL"
printf "  ‚Ä¢ Prometheus:     %s\n" "$PROM_URL"
printf "  ‚Ä¢ Alertmanager:   http://<IP>:9093\n"
printf "  ‚Ä¢ Loki API:       http://<IP>:3100\n"
printf "  ‚Ä¢ node_exporter:  http://<IP>:9100/metrics\n"
printf "  ‚Ä¢ blackbox:       http://<IP>:9115/probe?target=https://example.org\n"
printf "\n–õ–æ–≥ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: %s\n" "$LOG_DIR"
printf "Compose –ø–∞–ø–∫–∞:  %s\n" "$COMPOSE_DIR"
printf "\nUFW: –æ—Ç–≤–æ—Ä–µ–Ω–∏ –ø–æ—Ä—Ç–æ–≤–µ 22, 3000, 9090, 9093, 3100, 9100, 9115\n"

mark_success "MONHUB_MODULE6"
ok "–ì–æ—Ç–æ–≤–æ."
